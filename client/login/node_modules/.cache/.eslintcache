[{"/tmp/SWE-2022/client/src/index.js":"1","/tmp/SWE-2022/client/src/App.js":"2","/tmp/SWE-2022/client/src/reportWebVitals.js":"3","/tmp/SWE-2022/client/src/components/LoginForm.js":"4","/tmp/SWE-2022/client/src/components/Home.js":"5"},{"size":535,"mtime":1670327962377,"results":"6","hashOfConfig":"7"},{"size":1359,"mtime":1670327968905,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1670327962377,"results":"9","hashOfConfig":"7"},{"size":1759,"mtime":1670327968905,"results":"10","hashOfConfig":"7"},{"size":4627,"mtime":1670327968905,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rtt8o4",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/tmp/SWE-2022/client/src/index.js",[],[],"/tmp/SWE-2022/client/src/App.js",["29","30","31","32","33"],[],"//import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Home from './components/Home';\n\n\nfunction App() {\n  const adminUser = {\n    email: \"admin@admin.com\",\n    password: \"admin123\"\n  }\n\n  const [user, setUser] = useState({name: \"\", email: \"\"});\n  const [error, setError] = useState(\"\");\n\n  const Login = details => {\n    console.log(details);\n\n    if (details.email == adminUser.email && details.password == adminUser.password) {\n    console.log(\"Logged in!\");\n    setUser({\n      name: details.name,\n      email: details.email\n    });\n    }\n    else {\n    console.log(\"Details do not match!\")\n    }\n  }\n  \n\n  const Logout = () => {\n    setUser({ name: \"\", email: \"\"});\n    console.log(\"logout\");\n  }\n\n \n  return (\n    <div className=\"App\">\n      { (user.email != \"\") ? ( // javascript statement!\n        <div className = \"welcome\">  \n        <h2> Welcome, <span> {user.name} </span></h2>\n        <button onClick = {Logout}> Logout </button> \n        </div>\n      ) : (\n        //<Home></Home>\n        <LoginForm login = {Login} error = {error}/> //if there is an error we will display it if there isnt we wont\n        // we also have the option to write anonymous functions within the jsx: onClick = {() => setDetails...}\n      )\n      }\n     \n    </div>\n  );\n}\n\nexport default App;\n","/tmp/SWE-2022/client/src/reportWebVitals.js",[],[],"/tmp/SWE-2022/client/src/components/LoginForm.js",[],[],"/tmp/SWE-2022/client/src/components/Home.js",["34"],[],"import React, { useState } from 'react';\n\n\n\n// Notes: React \"reacts\" to changes in components, and rerenders the jsx in the return statement\n// 1. import a react hook\n// 2. create a component (class or function)\n// 3. handle Events: we write useState which returns a tuple of the variable, and a function we can use to modify the values \n    // \n    // onclick is ref to function where we put js\n// 4. pass in parameters to functions \nfunction Home() {\nconst [count, setCount] = useState(0)\n\nconst generateName = () => {\n//TODO: implement generate name function, probably move to separate ./utils/helper folder for organization\nconsole.log(\"sans sweep 2022\")\n\n}\n\n// playing around:\nconst add = () => {\nsetCount(count+1);\n\n}\n\n\n//TODO: front end wireframes, sign up onboarding screen (+ include username gen)\n//TODO: mess with css styles so that the navbar will stick to the top and cooperate. we get this result when the page is filled \n// up but otherwise not so....\n\n//navbar:\nreturn(\n<div>\n<div className = \"navigation\">\n  <nav class=\"navbar navbar-expand-lg navbar-mainbg\">\n   \n    <a class=\"navbar-brand navbar-logo\" href=\"#\"> Build Website</a>\n  \n  {/* tip: using curly brackets within jsx lets us write javascript statements! /* }\n  { /*this is what we are interested in -\n   how to get the navbar button click to display a different react component? */}\n    <button \n      class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <i class=\"fas fa-bars text-white\"></i>\n    </button>\n   \n    <div \n      class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto\">\n       \n            <div class=\"hori-selector\">\n              <div class=\"left\"></div>\n              <div class=\"right\"></div>\n            </div>\n           \n            <li class=\"nav-item\">\n                <a \n                  class=\"nav-link\" href=\"dashboard\">\n                  <i \n                    class=\"fas fa-tachometer-alt\">\n                  </i>Dashboard\n                </a>\n            </li>\n            <li class=\"nav-item active\">\n                <a \n                  class=\"nav-link\" href=\"address\">\n                  <i \n                    class=\"far fa-address-book\">\n                  </i>Address Book\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a \n                  class=\"nav-link\" href=\"components\">\n                  <i class=\"far fa-clone\">\n                  </i>Components\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a \n                  class=\"nav-link\" href=\"login\">\n                  <i \n                    class=\"far fa-calendar-alt\">\n                  </i>Login\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a \n                  class=\"nav-link\" href=\"signup\">\n                  <i \n                    class=\"far fa-chart-bar\">\n                  </i> Sign up\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a \n                  class=\"nav-link\" href=\"settings\">\n                  <i class=\"far fa-copy\">\n                  </i>Settings\n                </a>\n            </li>\n        </ul>\n    </div>\n  </nav>\n</div>\n  \n  <header class=\"mt-5 pt-5\">\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n   \n        <div class=\"col-md-6\">\n          <h1 class=\"mb-4 font-weight-bold\">We build\n            <span class=\"text-info\"> website</span>\n          </h1>\n          <p class=\"mb-4 pb-2 \">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam vitae, culpa qui officia deserunt laborum fuga similique mollit id quos aperiam proident non ut rerum debitis.\n          </p>\n          <div>\n            <a href=\"#contact\" class=\"text-center btn btn-outline-dark btn-lg btn-block\">Contact Us</a>\n          </div>\n        </div>\n       \n        <div class=\"col-md-6 d-none d-sm-none d-md-block\">\n        \n        </div>\n        \n      </div>\n    </div>\n  </header>\n \n\n  <div className='header'> \n  <h2> Chat Chat </h2>\n   <h2> Welcome, <span> bookie </span></h2>\n   <text> To protect your anonymity, let's generate a random name and photo </text>\n  <text> Write whatever you want! Select tags related to things below blah blah </text>\n  <button onClick = {generateName}> Generate!</button>\n  <button onClick = {() => add()}> Add to Count </button>\n  </div>\n  <p>\n\nhey guys\n\n  </p>\n  </div>\n  \n\n  \n);\n\n}\nexport default Home;\n",{"ruleId":"35","severity":1,"message":"36","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":14,"column":17,"nodeType":"37","messageId":"38","endLine":14,"endColumn":25},{"ruleId":"40","severity":1,"message":"41","line":19,"column":23,"nodeType":"42","messageId":"43","endLine":19,"endColumn":25},{"ruleId":"40","severity":1,"message":"41","line":19,"column":62,"nodeType":"42","messageId":"43","endLine":19,"endColumn":64},{"ruleId":"40","severity":1,"message":"44","line":40,"column":21,"nodeType":"42","messageId":"43","endLine":40,"endColumn":23},{"ruleId":"45","severity":1,"message":"46","line":38,"column":5,"nodeType":"47","endLine":38,"endColumn":50},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]