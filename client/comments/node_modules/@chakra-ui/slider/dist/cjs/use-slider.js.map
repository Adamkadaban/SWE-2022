{"version":3,"sources":["../../src/use-slider.ts"],"names":["useSlider","props","min","max","onChange","valueProp","value","defaultValue","isReversed","orientation","idProp","id","isDisabled","isReadOnly","onChangeStart","onChangeEnd","step","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","htmlProps","isDragging","setDragging","isFocused","setFocused","eventSource","setEventSource","isInteractive","getDefaultValue","shouldUpdate","prev","next","computedValue","setValue","cleanUpRef","reversedValue","trackValue","trackPercent","isVertical","trackRef","thumbRef","rootRef","thumbId","trackId","getValueFromPointer","event","current","trackRect","borderBox","touches","clientX","clientY","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","tenSteps","oneStep","constrain","actions","stepUp","stepDown","reset","stepTo","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","valueText","thumbBoxModel","thumbRect","thumbStyle","position","userSelect","touchAction","orient","vertical","horizontal","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","innerTrackStyle","right","onMouseDown","on","doc","run","addEventListener","clean","removeEventListener","off","mouseup","onTouchStart","touchend","touchcancel","detach","Object","values","forEach","cleanup","mousedown","touchstart","getRootProps","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","undefined","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","pointerEvents","getInputProps","type","state","options"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useControllableState,\n  useDimensions,\n  useEventCallback,\n  useEventListener,\n  useIds,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport {\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  dataAttr,\n  Dict,\n  EventKeyMap,\n  focus,\n  getBox,\n  getOwnerDocument,\n  isRightClick,\n  mergeRefs,\n  normalizeEventKey,\n  percentToValue,\n  PropGetter,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/utils\"\nimport {\n  CSSProperties,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * function gets called whenever the user starts dragging the slider handle\n   */\n  onChangeStart?(value: number): void\n  /**\n   * function gets called whenever the user stops dragging the slider handle.\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * function gets called whenever the slider handle is being dragged or clicked\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and it's components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It's mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n}\n\ntype EventSource = \"mouse\" | \"touch\" | \"keyboard\"\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It's an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/components/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation,\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart,\n    onChangeEnd,\n    step = 1,\n    getAriaValueText,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [eventSource, setEventSource] = useState<EventSource>()\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n    shouldUpdate: (prev, next) => prev !== next,\n  })\n\n  /**\n   * Slider uses DOM APIs to add and remove event listeners.\n   * Noticed some issues with React's synthetic events.\n   *\n   * We use `ref` to save the functions used to remove\n   * the event listeners.\n   *\n   * Ideally, we'll love to use pointer-events API but it's\n   * not fully supported in all browsers.\n   */\n  const cleanUpRef = useRef<Dict<Function>>({})\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const prev = useRef<number>()\n\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const trackPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<any>(null)\n  const thumbRef = useRef<any>(null)\n  const rootRef = useRef<any>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const [thumbId, trackId] = useIds(idProp, `slider-thumb`, `slider-track`)\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   */\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n\n      const trackRect = getBox(trackRef.current).borderBox\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, min, max)\n\n      if (step) {\n        nextValue = parseFloat(roundValueToStep(nextValue, min, step))\n      }\n\n      nextValue = clampValue(nextValue, min, max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, max, min, step],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const constrain = useCallback(\n    (value: number) => {\n      // bail out if slider isn't interactive\n      if (!isInteractive) return\n      prev.current = value\n      value = parseFloat(roundValueToStep(value, min, oneStep))\n      value = clampValue(value, min, max)\n      setValue(value)\n    },\n    [oneStep, max, min, setValue, isInteractive],\n  )\n\n  const actions = useMemo(\n    () => ({\n      stepUp: (step = oneStep) => {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown: (step = oneStep) => {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset: () => constrain(defaultValue || 0),\n      stepTo: (value: number) => constrain(value),\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(min),\n        End: () => constrain(max),\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        setEventSource(\"keyboard\")\n        action(event)\n      }\n    },\n    [actions, constrain, max, min, tenSteps],\n  )\n\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n  const thumbBoxModel = useDimensions(thumbRef)\n  const thumbRect = thumbBoxModel?.borderBox ?? {\n    width: 0,\n    height: 0,\n  }\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const thumbStyle: React.CSSProperties = {\n    position: \"absolute\",\n    userSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${trackPercent}% - ${thumbRect.height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${trackPercent}% - ${thumbRect.width / 2}px)`,\n      },\n    }),\n  }\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: thumbRect.width / 2,\n        paddingRight: thumbRect.width / 2,\n      },\n      horizontal: {\n        paddingTop: thumbRect.height / 2,\n        paddingBottom: thumbRect.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${100 - trackPercent}%`, top: 0 }\n        : { height: `${trackPercent}%`, bottom: 0 },\n      horizontal: isReversed\n        ? { width: `${100 - trackPercent}%`, right: 0 }\n        : { width: `${trackPercent}%`, left: 0 },\n    }),\n  }\n\n  useUpdateEffect(() => {\n    if (thumbRef.current && focusThumbOnChange) {\n      focus(thumbRef.current)\n    }\n  }, [value])\n\n  useUpdateEffect(() => {\n    const shouldUpdate =\n      !isDragging && eventSource !== \"keyboard\" && prev.current !== value\n\n    if (shouldUpdate) {\n      onChangeEnd?.(value)\n    }\n\n    if (eventSource === \"keyboard\") {\n      onChangeEnd?.(value)\n    }\n  }, [isDragging, onChangeEnd, value, eventSource])\n\n  const onMouseDown = useEventCallback((event: MouseEvent) => {\n    /**\n     * Prevent update if it's right-click\n     */\n    if (isRightClick(event)) return\n\n    if (!isInteractive || !rootRef.current) return\n\n    setDragging.on()\n    prev.current = value\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: MouseEvent) => {\n      const nextValue = getValueFromPointer(event)\n      if (nextValue != null && nextValue !== value) {\n        setEventSource(\"mouse\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc.addEventListener(\"mousemove\", run)\n\n    const clean = () => {\n      doc.removeEventListener(\"mousemove\", run)\n      setDragging.off()\n    }\n\n    doc.addEventListener(\"mouseup\", clean)\n    cleanUpRef.current.mouseup = () => {\n      doc.removeEventListener(\"mouseup\", clean)\n    }\n  })\n\n  const onTouchStart = useEventCallback((event: TouchEvent) => {\n    if (!isInteractive || !rootRef.current) return\n\n    // Prevent scrolling for touch events\n    event.preventDefault()\n\n    setDragging.on()\n    prev.current = value\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: TouchEvent) => {\n      const nextValue = getValueFromPointer(event)\n\n      if (nextValue != null && nextValue !== value) {\n        setEventSource(\"touch\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc.addEventListener(\"touchmove\", run)\n\n    const clean = () => {\n      doc.removeEventListener(\"touchmove\", run)\n      setDragging.off()\n    }\n\n    doc.addEventListener(\"touchend\", clean)\n    doc.addEventListener(\"touchcancel\", clean)\n\n    cleanUpRef.current.touchend = () => {\n      doc.removeEventListener(\"touchend\", clean)\n    }\n\n    cleanUpRef.current.touchcancel = () => {\n      doc.removeEventListener(\"touchcancel\", clean)\n    }\n  })\n\n  /**\n   * Remove all event handlers\n   */\n  const detach = () => {\n    Object.values(cleanUpRef.current).forEach((cleanup) => {\n      cleanup?.()\n    })\n    cleanUpRef.current = {}\n  }\n\n  /**\n   * Ensure we clean up listeners when slider unmounts\n   */\n  useEffect(() => {\n    return () => detach()\n  }, [])\n\n  useUpdateEffect(() => {\n    if (!isDragging) {\n      detach()\n    }\n  }, [isDragging])\n\n  cleanUpRef.current.mousedown = useEventListener(\n    \"mousedown\",\n    onMouseDown,\n    rootRef.current,\n  )\n\n  cleanUpRef.current.touchstart = useEventListener(\n    \"touchstart\",\n    onTouchStart,\n    rootRef.current,\n  )\n\n  const getRootProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ...htmlProps,\n    ref: mergeRefs(ref, rootRef),\n    tabIndex: -1,\n    \"aria-disabled\": ariaAttr(isDisabled),\n    \"data-focused\": dataAttr(isFocused),\n    style: {\n      ...props.style,\n      ...rootStyle,\n    },\n  })\n\n  const getTrackProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ref: mergeRefs(ref, trackRef),\n    id: trackId,\n    \"data-disabled\": dataAttr(isDisabled),\n    style: {\n      ...props.style,\n      ...trackStyle,\n    },\n  })\n\n  const getInnerTrackProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ref,\n    style: {\n      ...props.style,\n      ...innerTrackStyle,\n    },\n  })\n\n  const getThumbProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ref: mergeRefs(ref, thumbRef),\n    role: \"slider\",\n    tabIndex: 0,\n    id: thumbId,\n    \"data-active\": dataAttr(isDragging),\n    \"aria-valuetext\": valueText,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    \"aria-orientation\": orientation,\n    \"aria-disabled\": ariaAttr(isDisabled),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n    style: {\n      ...props.style,\n      ...thumbStyle,\n    },\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n    onFocus: callAllHandlers(props.onFocus, setFocused.on),\n    onBlur: callAllHandlers(props.onBlur, setFocused.off),\n  })\n\n  const getMarkerProps: PropGetter<any, { value?: any }> = (\n    props = {},\n    ref = null,\n  ) => {\n    const isInRange = !(props.value < min || props.value > max)\n    const isHighlighted = value >= props.value\n    const markerPercent = valueToPercent(props.value, min, max)\n\n    const markerStyle: React.CSSProperties = {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n        },\n        horizontal: {\n          left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n        },\n      }),\n    }\n\n    return {\n      ...props,\n      ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: {\n        ...props.style,\n        ...markerStyle,\n      },\n    }\n  }\n\n  const getInputProps: PropGetter<HTMLInputElement> = (\n    props = {},\n    ref = null,\n  ) => ({\n    ...props,\n    ref,\n    type: \"hidden\",\n    value,\n    name,\n  })\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"file":"use-slider.js"}