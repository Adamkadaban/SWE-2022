{"version":3,"sources":["../../src/breakpoints.ts"],"names":["fromEntries","createBreakpoints","config","sorted","Object","entries","base","sort","a","b","parseInt","assign","values"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAYA,OAAO,IAAMC,iBAAiB,GAC5BC,MAD+B,IAEZ;AACnB,MAAMC,MAAM,GAAGH,WAAW,CACxBI,MAAM,CAACC,OAAP;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,KAAiCJ,MAAjC,GAA2CK,IAA3C,CAAgD,CAACC,CAAD,EAAIC,CAAJ,KAC9CC,QAAQ,CAACF,CAAC,CAAC,CAAD,CAAF,CAAR,GAAiBE,QAAQ,CAACD,CAAC,CAAC,CAAD,CAAF,CAAzB,GAAkC,CAAlC,GAAsC,CAAC,CADzC,CADwB,CAA1B;AAMA,SAAOL,MAAM,CAACO,MAAP,CAAcP,MAAM,CAACQ,MAAP,CAAcT,MAAd,CAAd,EAAqCA,MAArC,CAAP;AACD,CAVM","sourcesContent":["import { fromEntries } from \"@chakra-ui/utils\"\n\nexport interface BaseBreakpointConfig extends Record<string, string> {\n  sm: string\n  md: string\n  lg: string\n  xl: string\n}\n\nexport type Breakpoints<T = BaseBreakpointConfig> = string[] & WithBase<T>\nexport type WithBase<T> = T & { base: \"0em\" }\n\nexport const createBreakpoints = <T extends BaseBreakpointConfig>(\n  config: T,\n): Breakpoints<T> => {\n  const sorted = fromEntries<WithBase<T>>(\n    Object.entries({ base: \"0em\", ...config }).sort((a, b) =>\n      parseInt(a[1]) > parseInt(b[1]) ? 1 : -1,\n    ),\n  )\n\n  return Object.assign(Object.values(sorted), sorted)\n}\n"],"file":"breakpoints.js"}