{"version":3,"sources":["../../src/use-breakpoint-value.ts"],"names":["getClosestValue","useBreakpoint","isArray","arrayToObjectNotation","fromEntries","useTheme","useBreakpointValue","values","breakpoint","breakpoints","obj","Object","entries","map","_","value"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,OAAT,EAAkBC,qBAAlB,EAAyCC,WAAzC,QAA4D,kBAA5D;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA;;;;;;;;AAOA,OAAO,SAASC,kBAAT,CACLC,MADK,EAEU;AACf,MAAMC,UAAU,GAAGP,aAAa,EAAhC;AACA,MAAM;AAAEQ,IAAAA;AAAF,MAAkBJ,QAAQ,EAAhC;;AAEA,MAAI,CAACG,UAAL,EAAiB;AACf;AACD;;AAED,MAAME,GAAG,GAAGR,OAAO,CAACK,MAAD,CAAP,GACRH,WAAW,CACTO,MAAM,CAACC,OAAP,CACET,qBAAqB,CAACI,MAAD,EAASE,WAAT,CADvB,EAEEI,GAFF,CAEM;AAAA,QAAC,CAACC,CAAD,EAAIC,KAAJ,CAAD;AAAA,WAAgB,CAACA,KAAD,EAAQA,KAAR,CAAhB;AAAA,GAFN,CADS,CADH,GAMRR,MANJ;AAQA,SAAOP,eAAe,CAACU,GAAD,EAAMF,UAAN,CAAtB;AACD","sourcesContent":["import { getClosestValue } from \"./media-query.utils\"\nimport { useBreakpoint } from \"./use-breakpoint\"\nimport { isArray, arrayToObjectNotation, fromEntries } from \"@chakra-ui/utils\"\nimport { useTheme } from \"@chakra-ui/system\"\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\nexport function useBreakpointValue<T = any>(\n  values: Record<string, T> | T[],\n): T | undefined {\n  const breakpoint = useBreakpoint()\n  const { breakpoints } = useTheme()\n\n  if (!breakpoint) {\n    return\n  }\n\n  const obj = isArray(values)\n    ? fromEntries<Record<string, T>>(\n        Object.entries(\n          arrayToObjectNotation(values, breakpoints),\n        ).map(([_, value]) => [value, value]),\n      )\n    : values\n\n  return getClosestValue(obj, breakpoint)\n}\n"],"file":"use-breakpoint-value.js"}