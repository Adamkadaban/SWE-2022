{"version":3,"sources":["../../../src/components/modal.ts"],"names":["mode","parts","baseStyleOverlay","props","isCentered","scrollBehavior","bg","display","justifyContent","alignItems","overflow","baseStyleContent","borderRadius","color","my","maxH","undefined","boxShadow","baseStyleHeader","px","py","fontSize","fontWeight","baseStyleBody","flex","baseStyleFooter","baseStyle","overlay","content","header","body","footer","getSize","value","maxW","h","sizes","xs","sm","md","lg","xl","full","defaultProps","size"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AAEA,IAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,MAAjC,EAAyC,QAAzC,CAAd;;AAIA,SAASC,gBAAT,CAA0BC,KAA1B,EAAuC;AACrC,MAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAiCF,KAAvC;AAEA,SAAO;AACLG,IAAAA,EAAE,EAAE,gBADC;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,cAAc,EAAE,QAHX;AAILC,IAAAA,UAAU,EAAEL,UAAU,GAAG,QAAH,GAAc,YAJ/B;AAKLM,IAAAA,QAAQ,EAAEL,cAAc,KAAK,QAAnB,GAA8B,QAA9B,GAAyC;AAL9C,GAAP;AAOD;;AAED,SAASM,gBAAT,CAA0BR,KAA1B,EAAuC;AACrC,MAAM;AAAEE,IAAAA;AAAF,MAAqBF,KAA3B;AAEA,SAAO;AACLS,IAAAA,YAAY,EAAE,IADT;AAELN,IAAAA,EAAE,EAAEN,IAAI,CAAC,OAAD,EAAU,UAAV,CAAJ,CAA0BG,KAA1B,CAFC;AAGLU,IAAAA,KAAK,EAAE,SAHF;AAILC,IAAAA,EAAE,EAAE,SAJC;AAKLC,IAAAA,IAAI,EAAEV,cAAc,KAAK,QAAnB,GAA8B,sBAA9B,GAAuDW,SALxD;AAMLC,IAAAA,SAAS,EAAEjB,IAAI,CAAC,IAAD,EAAO,SAAP,CAAJ,CAAsBG,KAAtB;AANN,GAAP;AAQD;;AAED,IAAMe,eAAe,GAAG;AACtBC,EAAAA,EAAE,EAAE,CADkB;AAEtBC,EAAAA,EAAE,EAAE,CAFkB;AAGtBC,EAAAA,QAAQ,EAAE,IAHY;AAItBC,EAAAA,UAAU,EAAE;AAJU,CAAxB;;AAOA,SAASC,aAAT,CAAuBpB,KAAvB,EAAoC;AAClC,MAAM;AAAEE,IAAAA;AAAF,MAAqBF,KAA3B;AACA,SAAO;AACLgB,IAAAA,EAAE,EAAE,CADC;AAELC,IAAAA,EAAE,EAAE,CAFC;AAGLI,IAAAA,IAAI,EAAE,CAHD;AAILd,IAAAA,QAAQ,EAAEL,cAAc,KAAK,QAAnB,GAA8B,MAA9B,GAAuCW;AAJ5C,GAAP;AAMD;;AAED,IAAMS,eAAe,GAAG;AACtBN,EAAAA,EAAE,EAAE,CADkB;AAEtBC,EAAAA,EAAE,EAAE;AAFkB,CAAxB;;AAKA,IAAMM,SAAS,GAAIvB,KAAD,KAAkB;AAClCwB,EAAAA,OAAO,EAAEzB,gBAAgB,CAACC,KAAD,CADS;AAElCyB,EAAAA,OAAO,EAAEjB,gBAAgB,CAACR,KAAD,CAFS;AAGlC0B,EAAAA,MAAM,EAAEX,eAH0B;AAIlCY,EAAAA,IAAI,EAAEP,aAAa,CAACpB,KAAD,CAJe;AAKlC4B,EAAAA,MAAM,EAAEN;AAL0B,CAAlB,CAAlB;AAQA;;;;;;AAIA,SAASO,OAAT,CAAiBC,KAAjB,EAAgC;AAC9B,MAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,WAAO;AAAEL,MAAAA,OAAO,EAAE;AAAEM,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,CAAC,EAAE;AAApB;AAAX,KAAP;AACD;;AAED,SAAO;AACLP,IAAAA,OAAO,EAAE;AAAEM,MAAAA,IAAI,EAAED;AAAR;AADJ,GAAP;AAGD;;AAED,IAAMG,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAEL,OAAO,CAAC,IAAD,CADC;AAEZM,EAAAA,EAAE,EAAEN,OAAO,CAAC,IAAD,CAFC;AAGZO,EAAAA,EAAE,EAAEP,OAAO,CAAC,IAAD,CAHC;AAIZQ,EAAAA,EAAE,EAAER,OAAO,CAAC,IAAD,CAJC;AAKZS,EAAAA,EAAE,EAAET,OAAO,CAAC,IAAD,CALC;AAMZ,SAAOA,OAAO,CAAC,KAAD,CANF;AAOZ,SAAOA,OAAO,CAAC,KAAD,CAPF;AAQZ,SAAOA,OAAO,CAAC,KAAD,CARF;AASZ,SAAOA,OAAO,CAAC,KAAD,CATF;AAUZ,SAAOA,OAAO,CAAC,KAAD,CAVF;AAWZU,EAAAA,IAAI,EAAEV,OAAO,CAAC,MAAD;AAXD,CAAd;AAcA,IAAMW,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,eAAe;AACb3C,EAAAA,KADa;AAEbyB,EAAAA,SAFa;AAGbU,EAAAA,KAHa;AAIbO,EAAAA;AAJa,CAAf","sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\"\n\nconst parts = [\"overlay\", \"content\", \"header\", \"body\", \"footer\"]\n\ntype Dict = Record<string, any>\n\nfunction baseStyleOverlay(props: Dict) {\n  const { isCentered, scrollBehavior } = props\n\n  return {\n    bg: \"blackAlpha.600\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\",\n  }\n}\n\nfunction baseStyleContent(props: Dict) {\n  const { scrollBehavior } = props\n\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props),\n  }\n}\n\nconst baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\",\n}\n\nfunction baseStyleBody(props: Dict) {\n  const { scrollBehavior } = props\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined,\n  }\n}\n\nconst baseStyleFooter = {\n  px: 6,\n  py: 4,\n}\n\nconst baseStyle = (props: Dict) => ({\n  overlay: baseStyleOverlay(props),\n  content: baseStyleContent(props),\n  header: baseStyleHeader,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter,\n})\n\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\nfunction getSize(value: string) {\n  if (value === \"full\") {\n    return { content: { maxW: \"100vw\", h: \"100vh\" } }\n  }\n\n  return {\n    content: { maxW: value },\n  }\n}\n\nconst sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\"),\n}\n\nconst defaultProps = {\n  size: \"md\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"file":"modal.js"}