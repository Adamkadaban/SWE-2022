{"version":3,"sources":["../../src/menu.tsx"],"names":["Menu","props","styles","ownProps","ctx","context","React","useMemo","children","isOpen","onClose","__DEV__","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","transition","button","MenuButton","Comp","as","otherProps","ownRef","Wrapper","pointerEvents","flex","MenuList","menulist","list","StyledMenuItem","type","undefined","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","shouldWrap","_children","CheckIcon","MenuItemOption","htmlProps","isChecked","id","MenuOptionGroup","rest","title","MenuGroup","className","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","border","borderBottom","borderColor","my","opacity"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport {\n  cx,\n  mergeRefs,\n  ReactNodeOrRenderProp,\n  runIfFn,\n  __DEV__,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport {\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionProps,\n  UseMenuProps,\n  UseMenuOptionOptions,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps {\n  children: ReactNodeOrRenderProp<{ isOpen: boolean; onClose(): void }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  return (\n    <MenuProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(props.children, {\n          isOpen: context.isOpen,\n          onClose: context.onClose,\n        })}\n      </StylesProvider>\n    </MenuProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends PropsOf<typeof chakra.button> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function StyledMenuButton(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.button\n        ref={ref}\n        {...props}\n        __css={{\n          display: \"inline-flex\",\n          appearance: \"none\",\n          alignItems: \"center\",\n          outline: 0,\n          transition: \"all 250ms\",\n          ...styles.button,\n        }}\n      />\n    )\n  },\n)\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function MenuButton(props, ref) {\n    const { children, as: Comp, ...otherProps } = props\n\n    const ownProps = useMenuButton(otherProps)\n    const ownRef = mergeRefs(ref, ownProps.ref)\n\n    const Wrapper = Comp || StyledMenuButton\n\n    return (\n      <Wrapper {...ownProps} ref={ownRef}>\n        <chakra.span\n          __css={{\n            pointerEvents: \"none\",\n            flex: \"1 1 auto\",\n          }}\n        >\n          {props.children}\n        </chakra.span>\n      </Wrapper>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuListProps extends PropsOf<typeof chakra.div> {}\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const menulist = useMenuList(props)\n  const styles = useStyles()\n  return (\n    <chakra.div\n      {...menulist}\n      ref={mergeRefs(menulist.ref, ref)}\n      __css={{\n        outline: 0,\n        ...styles.list,\n      }}\n    />\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface StyledMenuItemProps extends PropsOf<typeof chakra.button> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  function StyledMenuItem(props, ref) {\n    const styles = useStyles()\n\n    // given another component, use its type if present\n    // else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n    // else, fall back to \"button\"\n    const type = props.as ? props.type ?? undefined : \"button\"\n\n    return (\n      <chakra.button\n        ref={ref}\n        type={type}\n        {...props}\n        __css={{\n          textDecoration: \"none\",\n          color: \"inherit\",\n          userSelect: \"none\",\n          display: \"flex\",\n          width: \"100%\",\n          alignItems: \"center\",\n          textAlign: \"left\",\n          flex: \"0 0 auto\",\n          outline: 0,\n          ...styles.item,\n        }}\n      />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<UseMenuItemProps, \"isDisabled\" | \"isFocusable\"> {\n  /**\n   * The icon to render before the menu item's label.\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n}\n\nexport interface MenuItemProps\n  extends PropsOf<typeof chakra.button>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">(function MenuItem(\n  props,\n  ref,\n) {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    children,\n    ...otherProps\n  } = props\n\n  const ownProps = useMenuItem(otherProps)\n  const ownRef = mergeRefs(ownProps.ref, ref)\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <chakra.span pointerEvents=\"none\" flex=\"1\">\n      {children}\n    </chakra.span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem {...ownProps} ref={ownRef}>\n      {icon && <MenuIcon fontSize=\"0.8em\" mr={iconSpacing} children={icon} />}\n      {_children}\n      {command && <MenuCommand children={command} />}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<PropsOf<typeof StyledMenuItem>, keyof UseMenuOptionOptions> {\n  icon?: React.ReactElement\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  function MenuItemOption(props, ref) {\n    const { icon, iconSpacing = \"0.75rem\", ...htmlProps } = props\n\n    const ownProps = useMenuOption(htmlProps)\n    const ownRef = mergeRefs(ownProps.ref, ref)\n\n    return (\n      <StyledMenuItem {...ownProps} ref={ownRef}>\n        <MenuIcon\n          fontSize=\"0.8em\"\n          children={icon || <CheckIcon />}\n          mr={iconSpacing}\n          visibility={props.isChecked ? \"visible\" : \"hidden\"}\n        />\n        <chakra.span flex=\"1\">{ownProps.children}</chakra.span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { children, ...rest } = useMenuOptionGroup(props)\n  return <MenuGroup title={props.title} children={children} {...rest} />\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuGroupProps extends PropsOf<typeof chakra.div> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">(function MenuGroup(\n  props,\n  ref,\n) {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuCommandProps extends PropsOf<typeof chakra.span> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  function MenuCommand(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport const MenuIcon: React.FC<PropsOf<typeof chakra.span>> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends PropsOf<typeof chakra.hr> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const _className = cx(\"chakra-menu__divider\", className)\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={_className}\n      {...rest}\n      __css={{\n        border: 0,\n        borderBottom: \"1px solid\",\n        borderColor: \"inherit\",\n        my: \"0.5rem\",\n        opacity: 0.6,\n      }}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"],"file":"menu.js"}