{"version":3,"sources":["../../src/use-menu.ts"],"names":["useClickable","useDescendant","useDescendants","useControllableState","useDisclosure","useId","useIds","useShortcut","useUpdateEffect","usePopper","addItem","callAllHandlers","createContext","cx","dataAttr","focus","getNextIndex","getNextItemFromSearch","getPrevIndex","getValidChildren","isArray","isString","mergeRefs","normalizeEventKey","removeItem","useInteractOutside","cloneElement","useCallback","useRef","useState","MenuProvider","useMenuContext","strict","name","useMenu","props","id","closeOnSelect","closeOnBlur","autoSelect","placement","placementProp","gutter","fixed","preventOverflow","modifiers","isLazy","isOpen","onOpen","onClose","onToggle","menuRef","buttonRef","ref","onInteractOutside","event","current","contains","target","popper","reference","forceUpdate","focusedIndex","setFocusedIndex","domContext","preventScroll","buttonId","menuId","orientation","useMenuList","menu","Error","descendants","onCharacterPress","preventDefault","key","onKeyDown","eventKey","keyMap","Escape","ArrowDown","nextIndex","length","ArrowUp","prevIndex","action","character","nextItem","node","element","textContent","index","indexOf","children","className","tabIndex","role","hidden","style","useMenuButton","openAndFocusMenu","openAndFocusFirstItem","openAndFocusLastItem","lastIndex","onClick","Enter","stopPropagation","useMenuItem","onClickProp","isDisabled","isFocusable","htmlProps","context","disabled","focusable","onMouseEnter","onMouseMove","document","activeElement","onMouseLeave","isFocused","trulyDisabled","tabbable","useMenuOption","type","isChecked","rest","ownProps","useMenuOptionGroup","value","valueProp","defaultValue","onChange","isRadio","fallback","setValue","handleChange","selectedValue","nextValue","includes","validChildren","clones","map","child","useMenuState"],"mappings":"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","sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { useDescendant, useDescendants } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useDisclosure,\n  useId,\n  useIds,\n  useShortcut,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  addItem,\n  callAllHandlers,\n  createContext,\n  cx,\n  dataAttr,\n  EventKeyMap,\n  focus,\n  getNextIndex,\n  getNextItemFromSearch,\n  getPrevIndex,\n  getValidChildren,\n  isArray,\n  isString,\n  mergeRefs,\n  normalizeEventKey,\n  removeItem,\n} from \"@chakra-ui/utils\"\nimport { useInteractOutside } from \"@react-aria/interactions\"\nimport React, {\n  cloneElement,\n  HTMLAttributes,\n  MouseEvent,\n  useCallback,\n  useRef,\n  useState,\n} from \"react\"\n\nconst [MenuProvider, useMenuContext] = createContext<UseMenuReturn>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\nexport { MenuProvider, useMenuContext }\n\nexport interface UseMenuProps extends UsePopperProps {\n  /**\n   * Unique id to be used by menu and it's children\n   */\n  id?: string\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * The Popper.js modifiers to use\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   */\n  isLazy?: boolean\n  /**\n   * If `true`, the top-level menu will be opened in controlled mode\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the top-level menu will be opened in un-controlled mode\n   */\n  defaultIsOpen?: boolean\n  /**\n   * Function to be called when menu is open\n   */\n  onOpen?: () => void\n  /**\n   * Function to be called when menu is closed\n   */\n  onClose?: () => void\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate it's return value to all children\n */\nexport function useMenu(props: UseMenuProps) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    placement: placementProp = \"bottom-start\",\n    gutter,\n    fixed = true,\n    preventOverflow,\n    modifiers,\n    isLazy,\n  } = props\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure(props)\n\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  useInteractOutside({\n    ref: menuRef,\n    onInteractOutside: (event) => {\n      if (\n        isOpen &&\n        closeOnBlur &&\n        !buttonRef.current?.contains(event.target as HTMLElement)\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const { placement, popper, reference } = usePopper({\n    placement: placementProp,\n    fixed,\n    forceUpdate: isOpen,\n    gutter,\n    preventOverflow,\n    modifiers,\n  })\n\n  const [focusedIndex, setFocusedIndex] = useState(-1)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const domContext = useDescendants<HTMLDivElement, {}>()\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n      if (buttonRef.current) {\n        focus(buttonRef.current, {\n          preventScroll: true,\n        })\n      }\n    }\n  }, [isOpen])\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  return {\n    domContext,\n    popper,\n    placement,\n    reference,\n    buttonId,\n    menuId,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and it's return value\n * is passed as `context` to this hook.\n */\n\nexport interface UseMenuListProps\n  extends Omit<HTMLAttributes<Element>, \"color\"> {}\n\nexport function useMenuList(props: UseMenuListProps) {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot the component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    popper,\n    menuId,\n    placement,\n    domContext: { descendants },\n    isLazy,\n  } = menu\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const onCharacterPress = useShortcut({\n    preventDefault: (event) => event.key !== \" \",\n  })\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        Escape: onClose,\n        ArrowDown: () => {\n          const nextIndex = getNextIndex(focusedIndex, descendants.length)\n          setFocusedIndex(nextIndex)\n        },\n        ArrowUp: () => {\n          const prevIndex = getPrevIndex(focusedIndex, descendants.length)\n          setFocusedIndex(prevIndex)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      } else {\n        const action = onCharacterPress((character) => {\n          /**\n           * Typeahead: Based on current character pressed,\n           * find the next item to be selected\n           */\n          const nextItem = getNextItemFromSearch(\n            descendants,\n            character,\n            (node) => node.element?.textContent || \"\",\n            descendants[focusedIndex],\n          )\n\n          if (nextItem) {\n            const index = descendants.indexOf(nextItem)\n            setFocusedIndex(index)\n          }\n        })\n\n        action(event)\n      }\n    },\n    [descendants, focusedIndex, onCharacterPress, onClose, setFocusedIndex],\n  )\n\n  return {\n    ...props,\n    children: !isLazy || isOpen ? props.children : null,\n    className: cx(\"chakra-menu__menu-list\", props.className),\n    ref: mergeRefs(menuRef, popper.ref),\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    hidden: !isOpen,\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    \"data-placement\": placement,\n    style: { ...popper.style, ...props.style },\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and it's return value\n * is passed as `context` to this hook.\n */\n\nexport interface UseMenuButtonProps\n  extends Omit<HTMLAttributes<Element>, \"color\"> {}\n\nexport function useMenuButton(props: UseMenuButtonProps) {\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    onOpen,\n    isOpen,\n    onClose,\n    autoSelect,\n    menuRef,\n    domContext: { descendants },\n  } = menu\n\n  const openAndFocusMenu = useCallback(() => {\n    onOpen()\n    if (menuRef.current) {\n      focus(menuRef.current)\n    }\n  }, [onOpen, menuRef])\n\n  const openAndFocusFirstItem = useCallback(() => {\n    onOpen()\n    setFocusedIndex(0)\n  }, [onOpen, setFocusedIndex])\n\n  const openAndFocusLastItem = useCallback(() => {\n    onOpen()\n    const lastIndex = descendants.length - 1\n    setFocusedIndex(lastIndex)\n  }, [onOpen, setFocusedIndex, descendants])\n\n  const onClick = useCallback(() => {\n    if (isOpen) {\n      onClose()\n    } else {\n      const action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu\n      action()\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu])\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, menu.reference.ref),\n    className: cx(\"chakra-menu__menu-button\", props.className),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nexport interface UseMenuItemProps\n  extends Omit<HTMLAttributes<Element>, \"color\"> {\n  isDisabled?: boolean\n  isFocusable?: boolean\n}\n\nexport function useMenuItem(props: UseMenuItemProps) {\n  const {\n    onMouseOut: onMouseOutProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    domContext,\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect,\n    onClose,\n    menuRef,\n  } = menu\n\n  const ref = useRef<HTMLDivElement>(null)\n  const id = `menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const index = useDescendant({\n    element: ref.current,\n    context: domContext,\n    disabled: isDisabled,\n    focusable: isFocusable,\n  })\n\n  const onMouseEnter = useCallback(() => {\n    if (isDisabled) return\n    setFocusedIndex(index)\n  }, [setFocusedIndex, index, isDisabled])\n\n  const onMouseMove = useCallback(() => {\n    if (document.activeElement !== ref.current) {\n      onMouseEnter()\n    }\n  }, [onMouseEnter])\n\n  const onMouseLeave = useCallback(() => {\n    if (isDisabled) return\n    setFocusedIndex(-1)\n  }, [setFocusedIndex, isDisabled])\n\n  const onClick = useCallback(\n    (event: MouseEvent) => {\n      onClickProp?.(event)\n      /**\n       * Close menu and parent menu's if `closeOnSelect` is set to `true`\n       */\n      if (closeOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, closeOnSelect],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (isFocused && !trulyDisabled) {\n      if (ref.current) {\n        focus(ref.current)\n      }\n    } else {\n      if (document.activeElement !== menuRef.current) {\n        menuRef.current?.focus()\n      }\n    }\n  }, [isFocused, trulyDisabled, menuRef])\n\n  const tabbable = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref,\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...tabbable,\n    className: cx(\"chakra-menu__menuitem\", htmlProps.className),\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends UseMenuItemProps,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(props: UseMenuOptionProps) {\n  const {\n    onMouseOut,\n    onClick,\n    isDisabled,\n    isFocusable,\n    type = \"radio\",\n    isChecked,\n    ...rest\n  } = props\n\n  const ownProps = useMenuItem({\n    isDisabled,\n    isFocusable,\n    onClick,\n  })\n\n  return {\n    ...rest,\n    ...ownProps,\n    className: cx(\"chakra-menu__menuitem-option\", rest.className),\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n  className?: string\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange,\n  })\n\n  const handleChange = useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && isString(value)) {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? removeItem(value, selectedValue)\n          : addItem(value, selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      handleChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    className: cx(\"chakra-menu__option-group\", htmlProps.className),\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n"],"file":"use-menu.js"}