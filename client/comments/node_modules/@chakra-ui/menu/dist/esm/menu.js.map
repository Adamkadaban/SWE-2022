{"version":3,"sources":["../../src/menu.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","mergeRefs","runIfFn","__DEV__","React","MenuProvider","useMenu","useMenuButton","useMenuItem","useMenuList","useMenuOption","useMenuOptionGroup","Menu","props","styles","ownProps","ctx","context","useMemo","children","isOpen","onClose","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","transition","button","MenuButton","as","Comp","otherProps","ownRef","Wrapper","pointerEvents","flex","MenuList","menulist","list","StyledMenuItem","type","undefined","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","shouldWrap","_children","CheckIcon","MenuItemOption","htmlProps","isChecked","id","MenuOptionGroup","rest","title","MenuGroup","className","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","border","borderBottom","borderColor","my","opacity"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport {\n  cx,\n  mergeRefs,\n  ReactNodeOrRenderProp,\n  runIfFn,\n  __DEV__,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport {\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionProps,\n  UseMenuProps,\n  UseMenuOptionOptions,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps {\n  children: ReactNodeOrRenderProp<{ isOpen: boolean; onClose(): void }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  return (\n    <MenuProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(props.children, {\n          isOpen: context.isOpen,\n          onClose: context.onClose,\n        })}\n      </StylesProvider>\n    </MenuProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends PropsOf<typeof chakra.button> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function StyledMenuButton(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.button\n        ref={ref}\n        {...props}\n        __css={{\n          display: \"inline-flex\",\n          appearance: \"none\",\n          alignItems: \"center\",\n          outline: 0,\n          transition: \"all 250ms\",\n          ...styles.button,\n        }}\n      />\n    )\n  },\n)\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function MenuButton(props, ref) {\n    const { children, as: Comp, ...otherProps } = props\n\n    const ownProps = useMenuButton(otherProps)\n    const ownRef = mergeRefs(ref, ownProps.ref)\n\n    const Wrapper = Comp || StyledMenuButton\n\n    return (\n      <Wrapper {...ownProps} ref={ownRef}>\n        <chakra.span\n          __css={{\n            pointerEvents: \"none\",\n            flex: \"1 1 auto\",\n          }}\n        >\n          {props.children}\n        </chakra.span>\n      </Wrapper>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuListProps extends PropsOf<typeof chakra.div> {}\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const menulist = useMenuList(props)\n  const styles = useStyles()\n  return (\n    <chakra.div\n      {...menulist}\n      ref={mergeRefs(menulist.ref, ref)}\n      __css={{\n        outline: 0,\n        ...styles.list,\n      }}\n    />\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface StyledMenuItemProps extends PropsOf<typeof chakra.button> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  function StyledMenuItem(props, ref) {\n    const styles = useStyles()\n\n    // given another component, use its type if present\n    // else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n    // else, fall back to \"button\"\n    const type = props.as ? props.type ?? undefined : \"button\"\n\n    return (\n      <chakra.button\n        ref={ref}\n        type={type}\n        {...props}\n        __css={{\n          textDecoration: \"none\",\n          color: \"inherit\",\n          userSelect: \"none\",\n          display: \"flex\",\n          width: \"100%\",\n          alignItems: \"center\",\n          textAlign: \"left\",\n          flex: \"0 0 auto\",\n          outline: 0,\n          ...styles.item,\n        }}\n      />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<UseMenuItemProps, \"isDisabled\" | \"isFocusable\"> {\n  /**\n   * The icon to render before the menu item's label.\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n}\n\nexport interface MenuItemProps\n  extends PropsOf<typeof chakra.button>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">(function MenuItem(\n  props,\n  ref,\n) {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    children,\n    ...otherProps\n  } = props\n\n  const ownProps = useMenuItem(otherProps)\n  const ownRef = mergeRefs(ownProps.ref, ref)\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <chakra.span pointerEvents=\"none\" flex=\"1\">\n      {children}\n    </chakra.span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem {...ownProps} ref={ownRef}>\n      {icon && <MenuIcon fontSize=\"0.8em\" mr={iconSpacing} children={icon} />}\n      {_children}\n      {command && <MenuCommand children={command} />}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<PropsOf<typeof StyledMenuItem>, keyof UseMenuOptionOptions> {\n  icon?: React.ReactElement\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  function MenuItemOption(props, ref) {\n    const { icon, iconSpacing = \"0.75rem\", ...htmlProps } = props\n\n    const ownProps = useMenuOption(htmlProps)\n    const ownRef = mergeRefs(ownProps.ref, ref)\n\n    return (\n      <StyledMenuItem {...ownProps} ref={ownRef}>\n        <MenuIcon\n          fontSize=\"0.8em\"\n          children={icon || <CheckIcon />}\n          mr={iconSpacing}\n          visibility={props.isChecked ? \"visible\" : \"hidden\"}\n        />\n        <chakra.span flex=\"1\">{ownProps.children}</chakra.span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { children, ...rest } = useMenuOptionGroup(props)\n  return <MenuGroup title={props.title} children={children} {...rest} />\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuGroupProps extends PropsOf<typeof chakra.div> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">(function MenuGroup(\n  props,\n  ref,\n) {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport interface MenuCommandProps extends PropsOf<typeof chakra.span> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  function MenuCommand(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\n//////////////////////////////////////////////////////////////////////////\n\nexport const MenuIcon: React.FC<PropsOf<typeof chakra.span>> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends PropsOf<typeof chakra.hr> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const _className = cx(\"chakra-menu__divider\", className)\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={_className}\n      {...rest}\n      __css={{\n        border: 0,\n        borderBottom: \"1px solid\",\n        borderColor: \"inherit\",\n        my: \"0.5rem\",\n        opacity: 0.6,\n      }}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"],"file":"menu.js"}