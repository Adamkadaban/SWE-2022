{"ast":null,"code":"import { Transition } from \"@chakra-ui/transition\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { usePopoverContext } from \"./popover\";\nvar defaultStyles = {\n  init: {\n    opacity: 0.01,\n    transform: \"scale(0.9)\",\n    transitionTimingFunction: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n    transitionProperty: \"opacity, transform\",\n    willChange: \"opacity, transform\"\n  },\n  entered: {\n    opacity: 1,\n    transitionDuration: \"150ms\",\n    transform: \"scale(1)\"\n  },\n  exiting: {\n    opacity: 0.01,\n    transitionDuration: \"150ms\",\n    transform: \"scale(0.9)\"\n  }\n};\nexport function PopoverTransition(props) {\n  var {\n    children,\n    styles = defaultStyles\n  } = props;\n  var popover = usePopoverContext();\n  return /*#__PURE__*/React.createElement(Transition, {\n    onEnter: node => {\n      node.hidden = false;\n    },\n    onExited: node => {\n      node.hidden = true;\n      node.style.pointerEvents = \"auto\";\n    },\n    onExit: node => {\n      node.hidden = false;\n    },\n    onExiting: node => {\n      node.style.pointerEvents = \"none\";\n    },\n    timeout: {\n      enter: 0,\n      exit: 150\n    },\n    in: popover.isOpen,\n    styles: styles,\n    unmountOnExit: false,\n    children: children\n  });\n}\n\nif (__DEV__) {\n  PopoverTransition.displayName = \"PopoverTransition\";\n}","map":{"version":3,"sources":["../../src/popover.transition.tsx"],"names":["defaultStyles","init","opacity","transform","transitionTimingFunction","transitionProperty","willChange","entered","transitionDuration","exiting","styles","popover","usePopoverContext","node","enter","exit","children","PopoverTransition"],"mappings":"AACA,SAAA,UAAA,QAAA,uBAAA;AACA,SAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,iBAAA,QAAA,WAAA;AAOA,IAAMA,aAA+B,GAAG;AACtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EADH,IAAA;AAEJC,IAAAA,SAAS,EAFL,YAAA;AAGJC,IAAAA,wBAAwB,EAHpB,8BAAA;AAIJC,IAAAA,kBAAkB,EAJd,oBAAA;AAKJC,IAAAA,UAAU,EAAE;AALR,GADgC;AAQtCC,EAAAA,OAAO,EAAE;AACPL,IAAAA,OAAO,EADA,CAAA;AAEPM,IAAAA,kBAAkB,EAFX,OAAA;AAGPL,IAAAA,SAAS,EAAE;AAHJ,GAR6B;AAatCM,EAAAA,OAAO,EAAE;AACPP,IAAAA,OAAO,EADA,IAAA;AAEPM,IAAAA,kBAAkB,EAFX,OAAA;AAGPL,IAAAA,SAAS,EAAE;AAHJ;AAb6B,CAAxC;AAoBA,OAAO,SAAA,iBAAA,CAAA,KAAA,EAA0D;AAC/D,MAAM;AAAA,IAAA,QAAA;AAAYO,IAAAA,MAAM,GAAGV;AAArB,MAAN,KAAA;AAEA,MAAMW,OAAO,GAAGC,iBAAhB,EAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACE,IAAA,OAAO,EAAGC,IAAD,IAAU;AACjBA,MAAAA,IAAI,CAAJA,MAAAA,GAAAA,KAAAA;AAFJ,KAAA;AAIE,IAAA,QAAQ,EAAGA,IAAD,IAAU;AAClBA,MAAAA,IAAI,CAAJA,MAAAA,GAAAA,IAAAA;AACAA,MAAAA,IAAI,CAAJA,KAAAA,CAAAA,aAAAA,GAAAA,MAAAA;AANJ,KAAA;AAQE,IAAA,MAAM,EAAGA,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAAJA,MAAAA,GAAAA,KAAAA;AATJ,KAAA;AAWE,IAAA,SAAS,EAAGA,IAAD,IAAU;AACnBA,MAAAA,IAAI,CAAJA,KAAAA,CAAAA,aAAAA,GAAAA,MAAAA;AAZJ,KAAA;AAcE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAP,CAAA;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAdX;AAeE,IAAA,EAAE,EAAEJ,OAAO,CAfb,MAAA;AAgBE,IAAA,MAAM,EAhBR,MAAA;AAiBE,IAAA,aAAa,EAjBf,KAAA;AAkBE,IAAA,QAAQ,EAAEK;AAlBZ,GAAA,CADF;AAsBD;;AAED,IAAA,OAAA,EAAa;AACXC,EAAAA,iBAAiB,CAAjBA,WAAAA,GAAAA,mBAAAA;AACD","sourcesContent":["import { SystemStyleObject } from \"@chakra-ui/system\"\nimport { Transition, TransitionStyles } from \"@chakra-ui/transition\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { usePopoverContext } from \"./popover\"\n\nexport interface PopoverTransitionProps {\n  children: (styles: SystemStyleObject) => React.ReactNode\n  styles?: TransitionStyles\n}\n\nconst defaultStyles: TransitionStyles = {\n  init: {\n    opacity: 0.01,\n    transform: \"scale(0.9)\",\n    transitionTimingFunction: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n    transitionProperty: \"opacity, transform\",\n    willChange: \"opacity, transform\",\n  },\n  entered: {\n    opacity: 1,\n    transitionDuration: \"150ms\",\n    transform: \"scale(1)\",\n  },\n  exiting: {\n    opacity: 0.01,\n    transitionDuration: \"150ms\",\n    transform: \"scale(0.9)\",\n  },\n}\n\nexport function PopoverTransition(props: PopoverTransitionProps) {\n  const { children, styles = defaultStyles } = props\n\n  const popover = usePopoverContext()\n\n  return (\n    <Transition\n      onEnter={(node) => {\n        node.hidden = false\n      }}\n      onExited={(node) => {\n        node.hidden = true\n        node.style.pointerEvents = \"auto\"\n      }}\n      onExit={(node) => {\n        node.hidden = false\n      }}\n      onExiting={(node) => {\n        node.style.pointerEvents = \"none\"\n      }}\n      timeout={{ enter: 0, exit: 150 }}\n      in={popover.isOpen}\n      styles={styles}\n      unmountOnExit={false}\n      children={children}\n    />\n  )\n}\n\nif (__DEV__) {\n  PopoverTransition.displayName = \"PopoverTransition\"\n}\n"]},"metadata":{},"sourceType":"module"}