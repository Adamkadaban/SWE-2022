{"ast":null,"code":"import * as React from \"react\";\nimport { isBrowser } from \"@chakra-ui/utils\";\n\nvar isSupported = api => isBrowser && api in window;\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nexport function useMediaQuery(query) {\n  var [matches, setMatches] = React.useState(() => {\n    if (!isSupported(\"matchMedia\")) return false;\n    return !!window.matchMedia(query).matches;\n  });\n  useSafeLayoutEffect(() => {\n    if (!isSupported(\"matchMedia\")) return;\n    var mediaQueryList = window.matchMedia(query);\n\n    var listener = () => setMatches(!!mediaQueryList.matches);\n\n    mediaQueryList.addListener(listener);\n    listener();\n    return () => {\n      mediaQueryList.removeListener(listener);\n    };\n  }, [query]);\n  return [matches, setMatches];\n}","map":{"version":3,"sources":["../../src/use-media-query.ts"],"names":["isSupported","api","isBrowser","useSafeLayoutEffect","React","window","mediaQueryList","listener","setMatches"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,QAAA,kBAAA;;AAEA,IAAMA,WAAW,GAAIC,GAAD,IAAiBC,SAAS,IAAID,GAAG,IAArD,MAAA;;AACA,IAAME,mBAAmB,GAAGD,SAAS,GAAGE,KAAK,CAAR,eAAA,GAA2BA,KAAK,CAArE,SAAA;AAEA;;;;;;AAKA,OAAO,SAAA,aAAA,CAAA,KAAA,EAAsC;AAC3C,MAAM,CAAA,OAAA,EAAA,UAAA,IAAwB,KAAK,CAAL,QAAA,CAAe,MAAM;AACjD,QAAI,CAACJ,WAAW,CAAhB,YAAgB,CAAhB,EAAgC,OAAA,KAAA;AAChC,WAAO,CAAC,CAACK,MAAM,CAANA,UAAAA,CAAAA,KAAAA,EAAT,OAAA;AAFF,GAA8B,CAA9B;AAKAF,EAAAA,mBAAmB,CAAC,MAAM;AACxB,QAAI,CAACH,WAAW,CAAhB,YAAgB,CAAhB,EAAgC;AAEhC,QAAMM,cAAc,GAAGD,MAAM,CAANA,UAAAA,CAAvB,KAAuBA,CAAvB;;AACA,QAAME,QAAQ,GAAG,MAAMC,UAAU,CAAC,CAAC,CAACF,cAAc,CAAlD,OAAiC,CAAjC;;AAEAA,IAAAA,cAAc,CAAdA,WAAAA,CAAAA,QAAAA;AAEAC,IAAAA,QAAQ;AAER,WAAO,MAAM;AACXD,MAAAA,cAAc,CAAdA,cAAAA,CAAAA,QAAAA;AADF,KAAA;AAViB,GAAA,EAahB,CAbHH,KAaG,CAbgB,CAAnBA;AAeA,SAAO,CAAA,OAAA,EAAP,UAAO,CAAP;AACD","sourcesContent":["import * as React from \"react\"\nimport { isBrowser } from \"@chakra-ui/utils\"\n\nconst isSupported = (api: string) => isBrowser && api in window\nconst useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\nexport function useMediaQuery(query: string) {\n  const [matches, setMatches] = React.useState(() => {\n    if (!isSupported(\"matchMedia\")) return false\n    return !!window.matchMedia(query).matches\n  })\n\n  useSafeLayoutEffect(() => {\n    if (!isSupported(\"matchMedia\")) return\n\n    const mediaQueryList = window.matchMedia(query)\n    const listener = () => setMatches(!!mediaQueryList.matches)\n\n    mediaQueryList.addListener(listener)\n\n    listener()\n\n    return () => {\n      mediaQueryList.removeListener(listener)\n    }\n  }, [query])\n\n  return [matches, setMatches] as const\n}\n"]},"metadata":{},"sourceType":"module"}