{"ast":null,"code":"import _toConsumableArray from \"/opt/reddit-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/opt/reddit-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from \"react\";\nimport { createPopper } from \"@popperjs/core\";\nimport { getArrowStyles, toTransformOrigin } from \"./popper.utils\";\nvar isBrowser = typeof window !== \"undefined\";\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\nexport function usePopper(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$placement = _props.placement,\n      initialPlacement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      offsetProp = _props.offset,\n      _props$preventOverflo = _props.preventOverflow,\n      preventOverflow = _props$preventOverflo === void 0 ? true : _props$preventOverflo,\n      _props$fixed = _props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$forceUpdate = _props.forceUpdate,\n      forceUpdate = _props$forceUpdate === void 0 ? true : _props$forceUpdate,\n      _props$flip = _props.flip,\n      flip = _props$flip === void 0 ? true : _props$flip,\n      _props$arrowSize = _props.arrowSize,\n      arrowSize = _props$arrowSize === void 0 ? 10 : _props$arrowSize,\n      arrowShadowColor = _props.arrowShadowColor,\n      _props$gutter = _props.gutter,\n      gutter = _props$gutter === void 0 ? arrowSize : _props$gutter,\n      _props$eventsEnabled = _props.eventsEnabled,\n      eventsEnabled = _props$eventsEnabled === void 0 ? true : _props$eventsEnabled,\n      modifiers = _props.modifiers;\n  var popper = React.useRef(null);\n  var referenceRef = React.useRef(null);\n  var popoverRef = React.useRef(null);\n  var arrowRef = React.useRef(null);\n\n  var _React$useState = React.useState(initialPlacement),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      originalPlacement = _React$useState2[0],\n      place = _React$useState2[1];\n\n  var _React$useState3 = React.useState(initialPlacement),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      placement = _React$useState4[0],\n      setPlacement = _React$useState4[1];\n\n  var _React$useState5 = React.useState(offsetProp || [0, gutter]),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      offset = _React$useState6[0];\n\n  var _React$useState7 = React.useState({}),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      popoverStyles = _React$useState8[0],\n      setPopoverStyles = _React$useState8[1];\n\n  var _React$useState9 = React.useState({}),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      arrowStyles = _React$useState10[0],\n      setArrowStyles = _React$useState10[1];\n\n  var update = React.useCallback(function () {\n    if (popper.current) {\n      popper.current.forceUpdate();\n      return true;\n    }\n\n    return false;\n  }, []);\n  var modifiersOverride = modifiers != null ? modifiers : [];\n  useSafeLayoutEffect(function () {\n    if (referenceRef.current && popoverRef.current) {\n      popper.current = createPopper(referenceRef.current, popoverRef.current, {\n        placement: originalPlacement,\n        strategy: fixed ? \"fixed\" : \"absolute\",\n        modifiers: [{\n          name: \"eventListeners\",\n          enabled: eventsEnabled\n        }, {\n          name: \"applyStyles\",\n          enabled: false\n        }, {\n          name: \"flip\",\n          enabled: flip,\n          options: {\n            padding: 8\n          }\n        }, {\n          name: \"computeStyles\",\n          options: {\n            gpuAcceleration: false,\n            adaptive: false\n          }\n        }, {\n          name: \"offset\",\n          options: {\n            offset: offset\n          }\n        }, {\n          name: \"preventOverflow\",\n          enabled: preventOverflow,\n          options: {\n            tetherOffset: function tetherOffset() {\n              var _arrowRef$current;\n\n              return ((_arrowRef$current = arrowRef.current) == null ? void 0 : _arrowRef$current.clientWidth) || 0;\n            }\n          }\n        }, {\n          name: \"arrow\",\n          enabled: Boolean(arrowRef.current),\n          options: {\n            element: arrowRef.current\n          }\n        }, {\n          name: \"updateState\",\n          phase: \"write\",\n          enabled: true,\n          fn: function fn(_ref) {\n            var state = _ref.state;\n            setPlacement(state.placement);\n            setPopoverStyles(state.styles.popper);\n            setArrowStyles(state.styles.arrow);\n          }\n        }].concat(_toConsumableArray(modifiersOverride))\n      });\n    }\n\n    return function () {\n      if (popper.current) {\n        popper.current.destroy();\n        popper.current = null;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [originalPlacement, fixed, forceUpdate, flip, offset, preventOverflow, eventsEnabled]);\n  useSafeLayoutEffect(function () {\n    var id = requestAnimationFrame(function () {\n      if (forceUpdate) {\n        var _popper$current;\n\n        (_popper$current = popper.current) == null ? void 0 : _popper$current.forceUpdate();\n      }\n    });\n    return function () {\n      cancelAnimationFrame(id);\n    };\n  }, [forceUpdate]);\n\n  var computedArrowStyles = _extends({}, arrowStyles, getArrowStyles(placement, arrowSize, arrowShadowColor));\n\n  return {\n    popperInstance: popper.current,\n    reference: {\n      ref: referenceRef\n    },\n    popper: {\n      ref: popoverRef,\n      style: _extends({}, popoverStyles, {\n        transformOrigin: toTransformOrigin(placement)\n      })\n    },\n    arrow: {\n      ref: arrowRef,\n      style: computedArrowStyles\n    },\n    update: update,\n    placement: placement,\n    place: place\n  };\n}","map":{"version":3,"sources":["../../src/use-popper.ts"],"names":["isBrowser","useSafeLayoutEffect","React","props","placement","initialPlacement","offset","preventOverflow","fixed","forceUpdate","flip","arrowSize","gutter","eventsEnabled","modifiers","popper","referenceRef","popoverRef","arrowRef","offsetProp","update","modifiersOverride","createPopper","strategy","name","enabled","options","padding","gpuAcceleration","adaptive","tetherOffset","Boolean","element","current","phase","fn","state","setPlacement","setPopoverStyles","setArrowStyles","id","requestAnimationFrame","cancelAnimationFrame","computedArrowStyles","getArrowStyles","popperInstance","reference","ref","style","transformOrigin","toTransformOrigin","arrow","place"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,QAAA,gBAAA;AAEA,SAAA,cAAA,EAAA,iBAAA,QAAA,gBAAA;AAEA,IAAMA,SAAS,GAAG,OAAA,MAAA,KAAlB,WAAA;AACA,IAAMC,mBAAmB,GAAGD,SAAS,GAAGE,KAAK,CAAR,eAAA,GAA2BA,KAAK,CAArE,SAAA;AAkBA,OAAO,SAAA,SAAA,CAAA,KAAA,EAA+C;AAAA,MAA5BC,KAA4B,KAAA,KAAA,CAAA,EAAA;AAA5BA,IAAAA,KAA4B,GAAJ,EAAxBA;AAA4B;;AAAA,eACpD,KADoD;AAAA,gCAElDC,SAFkD;AAAA,MAEvCC,gBAFuC,iCAC9C,QAD8C;AAAA,MAC9C,UAD8C,UAGlDC,MAHkD;AAAA,qCAIlDC,eAJkD;AAAA,MAIlDA,eAJkD,sCAC9C,IAD8C;AAAA,4BAKlDC,KALkD;AAAA,MAKlDA,KALkD,6BAC9C,KAD8C;AAAA,kCAMlDC,WANkD;AAAA,MAMlDA,WANkD,mCAC9C,IAD8C;AAAA,2BAOlDC,IAPkD;AAAA,MAOlDA,IAPkD,4BAC9C,IAD8C;AAAA,gCAQlDC,SARkD;AAAA,MAQlDA,SARkD,iCAC9C,EAD8C;AAAA,MAC9C,gBAD8C,UAC9C,gBAD8C;AAAA,6BAUlDC,MAVkD;AAAA,MAUlDA,MAVkD,8BAC9C,SAD8C;AAAA,oCAWlDC,aAXkD;AAAA,MAWlDA,aAXkD,qCAC9C,IAD8C;AAAA,MAYlDC,SAZkD,UAYlDA,SAZkD;AAepD,MAAMC,MAAM,GAAGb,KAAK,CAALA,MAAAA,CAAf,IAAeA,CAAf;AACA,MAAMc,YAAY,GAAGd,KAAK,CAALA,MAAAA,CAArB,IAAqBA,CAArB;AACA,MAAMe,UAAU,GAAGf,KAAK,CAALA,MAAAA,CAAnB,IAAmBA,CAAnB;AACA,MAAMgB,QAAQ,GAAGhB,KAAK,CAALA,MAAAA,CAAjB,IAAiBA,CAAjB;;AAlBoD,wBAoBjBA,KAAK,CAALA,QAAAA,CAAnC,gBAAmCA,CApBiB;AAAA;AAAA,MAoB9C,iBApB8C;AAAA,MAoB9C,KApB8C;;AAAA,yBAqBlBA,KAAK,CAALA,QAAAA,CAAlC,gBAAkCA,CArBkB;AAAA;AAAA,MAqB9C,SArB8C;AAAA,MAqB9C,YArB8C;;AAAA,yBAsBnCA,KAAK,CAALA,QAAAA,CAAeiB,UAAU,IAAI,CAAA,CAAA,EAA9C,MAA8C,CAA7BjB,CAtBmC;AAAA;AAAA,MAsB9C,MAtB8C;;AAAA,yBAuBVA,KAAK,CAALA,QAAAA,CAA1C,EAA0CA,CAvBU;AAAA;AAAA,MAuB9C,aAvB8C;AAAA,MAuB9C,gBAvB8C;;AAAA,yBA0BdA,KAAK,CAALA,QAAAA,CAAtC,EAAsCA,CA1Bc;AAAA;AAAA,MA0B9C,WA1B8C;AAAA,MA0B9C,cA1B8C;;AA4BpD,MAAMkB,MAAM,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAM;AACrC,QAAIL,MAAM,CAAV,OAAA,EAAoB;AAClBA,MAAAA,MAAM,CAANA,OAAAA,CAAAA,WAAAA;AACA,aAAA,IAAA;AACD;;AACD,WAAA,KAAA;AALa,GAAA,EAAf,EAAe,CAAf;AAQA,MAAMM,iBAAiB,GAAGP,SAAH,IAAA,IAAGA,GAAH,SAAGA,GAA1B,EAAA;AAEAb,EAAAA,mBAAmB,CAAC,YAAM;AACxB,QAAIe,YAAY,CAAZA,OAAAA,IAAwBC,UAAU,CAAtC,OAAA,EAAgD;AAC9CF,MAAAA,MAAM,CAANA,OAAAA,GAAiBO,YAAY,CAACN,YAAY,CAAb,OAAA,EAAuBC,UAAU,CAAjC,OAAA,EAA2C;AACtEb,QAAAA,SAAS,EAD6D,iBAAA;AAEtEmB,QAAAA,QAAQ,EAAEf,KAAK,GAAA,OAAA,GAFuD,UAAA;AAGtEM,QAAAA,SAAS,GACP;AACEU,UAAAA,IAAI,EADN,gBAAA;AAEEC,UAAAA,OAAO,EAAEZ;AAFX,SADO,EAKP;AACEW,UAAAA,IAAI,EADN,aAAA;AAEEC,UAAAA,OAAO,EAAE;AAFX,SALO,EASP;AACED,UAAAA,IAAI,EADN,MAAA;AAEEC,UAAAA,OAAO,EAFT,IAAA;AAGEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX;AAHX,SATO,EAcP;AACEH,UAAAA,IAAI,EADN,eAAA;AAEEE,UAAAA,OAAO,EAAE;AAAEE,YAAAA,eAAe,EAAjB,KAAA;AAA0BC,YAAAA,QAAQ,EAAE;AAApC;AAFX,SAdO,EAkBP;AACEL,UAAAA,IAAI,EADN,QAAA;AAEEE,UAAAA,OAAO,EAAE;AAAEpB,YAAAA,MAAAA,EAAAA;AAAF;AAFX,SAlBO,EAsBP;AACEkB,UAAAA,IAAI,EADN,iBAAA;AAEEC,UAAAA,OAAO,EAFT,eAAA;AAGEC,UAAAA,OAAO,EAAE;AACPI,YAAAA,YAAY,EAAE,wBAAA;AAAA,kBAAA,iBAAA;;AAAA,qBAAM,CAAA,CAAA,iBAAA,GAAA,QAAQ,CAAR,OAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAA,WAAA,KAAN,CAAA;AAAA;AADP;AAHX,SAtBO,EA6BP;AACEN,UAAAA,IAAI,EADN,OAAA;AAEEC,UAAAA,OAAO,EAAEM,OAAO,CAACb,QAAQ,CAF3B,OAEkB,CAFlB;AAGEQ,UAAAA,OAAO,EAAE;AAAEM,YAAAA,OAAO,EAAEd,QAAQ,CAACe;AAApB;AAHX,SA7BO,EAkCP;AACET,UAAAA,IAAI,EADN,aAAA;AAEEU,UAAAA,KAAK,EAFP,OAAA;AAGET,UAAAA,OAAO,EAHT,IAAA;AAIEU,UAAAA,EAJF,cAII,IAJJ,EAIgB;AAAA,gBAATC,KAAS,GAAA,IAAA,CAATA,KAAS;AACZC,YAAAA,YAAY,CAACD,KAAK,CAAlBC,SAAY,CAAZA;AACAC,YAAAA,gBAAgB,CAACF,KAAK,CAALA,MAAAA,CAAjBE,MAAgB,CAAhBA;AACAC,YAAAA,cAAc,CAACH,KAAK,CAALA,MAAAA,CAAfG,KAAc,CAAdA;AACD;AARH,SAlCO,4BAAE,iBAAF;AAH6D,OAA3C,CAA7BxB;AAkDD;;AACD,WAAO,YAAM;AACX,UAAIA,MAAM,CAAV,OAAA,EAAoB;AAClBA,QAAAA,MAAM,CAANA,OAAAA,CAAAA,OAAAA;AACAA,QAAAA,MAAM,CAANA,OAAAA,GAAAA,IAAAA;AACD;AAzDqB,KAqDxB,CArDwB,CA2DxB;AA3DiB,GAAA,EA4DhB,CAAA,iBAAA,EAAA,KAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,eAAA,EA5DHd,aA4DG,CA5DgB,CAAnBA;AAsEAA,EAAAA,mBAAmB,CAAC,YAAM;AACxB,QAAMuC,EAAE,GAAGC,qBAAqB,CAAC,YAAM;AACrC,UAAA,WAAA,EAAiB;AAAA,YAAA,eAAA;;AACf,SAAA,eAAA,GAAA,MAAM,CAAN,OAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAA,WAAA,EAAA;AACD;AAHH,KAAgC,CAAhC;AAKA,WAAO,YAAM;AACXC,MAAAA,oBAAoB,CAApBA,EAAoB,CAApBA;AADF,KAAA;AANiB,GAAA,EAShB,CATHzC,WASG,CATgB,CAAnBA;;AAWA,MAAM0C,mBAAwC,GAAA,QAAA,CAAA,EAAA,EAAA,WAAA,EAEzCC,cAAc,CAAA,SAAA,EAAA,SAAA,EAFnB,gBAEmB,CAF2B,CAA9C;;AAKA,SAAO;AACLC,IAAAA,cAAc,EAAE9B,MAAM,CADjB,OAAA;AAEL+B,IAAAA,SAAS,EAAE;AACTC,MAAAA,GAAG,EAAE/B;AADI,KAFN;AAKLD,IAAAA,MAAM,EAAE;AACNgC,MAAAA,GAAG,EADG,UAAA;AAENC,MAAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAEHC,QAAAA,eAAe,EAAEC,iBAAiB,CAAA,SAAA;AAF/B,OAAA;AAFC,KALH;AAYLC,IAAAA,KAAK,EAAE;AACLJ,MAAAA,GAAG,EADE,QAAA;AAELC,MAAAA,KAAK,EAAEL;AAFF,KAZF;AAgBLvB,IAAAA,MAhBK,EAgBLA,MAhBK;AAiBLhB,IAAAA,SAjBK,EAiBLA,SAjBK;AAkBLgD,IAAAA,KAAAA,EAAAA;AAlBK,GAAP;AAoBD","sourcesContent":["import * as React from \"react\"\nimport { Instance, createPopper, Modifier } from \"@popperjs/core\"\nimport type { Placement } from \"@popperjs/core\"\nimport { getArrowStyles, toTransformOrigin } from \"./popper.utils\"\n\nconst isBrowser = typeof window !== \"undefined\"\nconst useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  gutter?: number\n  placement?: Placement\n  offset?: number\n  preventOverflow?: boolean\n  fixed?: boolean\n  forceUpdate?: boolean\n  flip?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n  eventsEnabled?: boolean\n  modifiers?: Modifier<any, any>[]\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    placement: initialPlacement = \"bottom\",\n    offset: offsetProp,\n    preventOverflow = true,\n    fixed = false,\n    forceUpdate = true,\n    flip = true,\n    arrowSize = 10,\n    arrowShadowColor,\n    gutter = arrowSize,\n    eventsEnabled = true,\n    modifiers,\n  } = props\n\n  const popper = React.useRef<Instance | null>(null)\n  const referenceRef = React.useRef<HTMLButtonElement>(null)\n  const popoverRef = React.useRef<HTMLDivElement>(null)\n  const arrowRef = React.useRef<HTMLDivElement>(null)\n\n  const [originalPlacement, place] = React.useState(initialPlacement)\n  const [placement, setPlacement] = React.useState(initialPlacement)\n  const [offset] = React.useState(offsetProp || [0, gutter])\n  const [popoverStyles, setPopoverStyles] = React.useState<React.CSSProperties>(\n    {},\n  )\n  const [arrowStyles, setArrowStyles] = React.useState<React.CSSProperties>({})\n\n  const update = React.useCallback(() => {\n    if (popper.current) {\n      popper.current.forceUpdate()\n      return true\n    }\n    return false\n  }, [])\n\n  const modifiersOverride = modifiers ?? []\n\n  useSafeLayoutEffect(() => {\n    if (referenceRef.current && popoverRef.current) {\n      popper.current = createPopper(referenceRef.current, popoverRef.current, {\n        placement: originalPlacement,\n        strategy: fixed ? \"fixed\" : \"absolute\",\n        modifiers: [\n          {\n            name: \"eventListeners\",\n            enabled: eventsEnabled,\n          },\n          {\n            name: \"applyStyles\",\n            enabled: false,\n          },\n          {\n            name: \"flip\",\n            enabled: flip,\n            options: { padding: 8 },\n          },\n          {\n            name: \"computeStyles\",\n            options: { gpuAcceleration: false, adaptive: false },\n          },\n          {\n            name: \"offset\",\n            options: { offset },\n          },\n          {\n            name: \"preventOverflow\",\n            enabled: preventOverflow,\n            options: {\n              tetherOffset: () => arrowRef.current?.clientWidth || 0,\n            },\n          },\n          {\n            name: \"arrow\",\n            enabled: Boolean(arrowRef.current),\n            options: { element: arrowRef.current },\n          },\n          {\n            name: \"updateState\",\n            phase: \"write\",\n            enabled: true,\n            fn({ state }) {\n              setPlacement(state.placement)\n              setPopoverStyles(state.styles.popper as React.CSSProperties)\n              setArrowStyles(state.styles.arrow as React.CSSProperties)\n            },\n          },\n          ...modifiersOverride,\n        ],\n      })\n    }\n    return () => {\n      if (popper.current) {\n        popper.current.destroy()\n        popper.current = null\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    originalPlacement,\n    fixed,\n    forceUpdate,\n    flip,\n    offset,\n    preventOverflow,\n    eventsEnabled,\n  ])\n\n  useSafeLayoutEffect(() => {\n    const id = requestAnimationFrame(() => {\n      if (forceUpdate) {\n        popper.current?.forceUpdate()\n      }\n    })\n    return () => {\n      cancelAnimationFrame(id)\n    }\n  }, [forceUpdate])\n\n  const computedArrowStyles: React.CSSProperties = {\n    ...arrowStyles,\n    ...getArrowStyles(placement, arrowSize, arrowShadowColor),\n  }\n\n  return {\n    popperInstance: popper.current,\n    reference: {\n      ref: referenceRef,\n    },\n    popper: {\n      ref: popoverRef,\n      style: {\n        ...popoverStyles,\n        transformOrigin: toTransformOrigin(placement),\n      },\n    },\n    arrow: {\n      ref: arrowRef,\n      style: computedArrowStyles,\n    },\n    update,\n    placement,\n    place,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}