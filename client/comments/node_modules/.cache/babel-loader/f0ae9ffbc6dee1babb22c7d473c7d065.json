{"ast":null,"code":"var _jsxFileName = \"/opt/reddit-clone/src/components/vote-buttons.js\";\nimport { IconButton, Text, VStack } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiArrowDown, FiArrowUp } from \"react-icons/fi\";\nimport db from \"../lib/firebase\";\n\nconst VoteButtons = ({\n  post\n}) => {\n  const [isVoting, setVoting] = useState(false);\n  const [votedPosts, setVotedPosts] = useState([]);\n  useEffect(() => {\n    // Fetch the previously voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\" and update the item on localStorage. Return \"true\" if the user has already voted the post.\n    const votesFromLocalStorage = localStorage.getItem(\"votes\") || [];\n    let previousVotes = [];\n\n    try {\n      // Parse the value of the item from localStorage. If the value of the\n      // items isn't an array, then JS will throw an error.\n      previousVotes = JSON.parse(votesFromLocalStorage);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setVotedPosts(previousVotes);\n  }, []);\n\n  const handleDisablingOfVoting = postId => {\n    // This function is responsible for disabling the voting button after a\n    // user has voted. Fetch the previously voted items from localStorage. See\n    // https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\"\n    // and update the item on localStorage.\n    const previousVotes = votedPosts;\n    previousVotes.push(postId);\n    setVotedPosts(previousVotes); // Update the voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.stringify\" and update the item on localStorage.\n\n    localStorage.setItem(\"votes\", JSON.stringify(votedPosts));\n  };\n\n  const handleClick = async type => {\n    setVoting(true); // Do calculation to save the vote.\n\n    let upVotesCount = post.upVotesCount;\n    let downVotesCount = post.downVotesCount;\n    const date = new Date();\n\n    if (type === \"upvote\") {\n      upVotesCount = upVotesCount + 1;\n    } else {\n      downVotesCount = downVotesCount + 1;\n    }\n\n    await db.collection(\"posts\").doc(post.id).set({\n      title: post.title,\n      upVotesCount,\n      downVotesCount,\n      createdAt: post.createdAt,\n      updatedAt: date.toUTCString()\n    }); // Disable the voting button once the voting is successful.\n\n    handleDisablingOfVoting(post.id);\n    setVoting(false);\n  };\n\n  const checkIfPostIsAlreadyVoted = () => {\n    if (votedPosts.indexOf(post.id) > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"lg\",\n    colorScheme: \"purple\",\n    \"aria-label\": \"Upvote\",\n    icon: /*#__PURE__*/React.createElement(FiArrowUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }),\n    onClick: () => handleClick(\"upvote\"),\n    isLoading: isVoting,\n    isDisabled: checkIfPostIsAlreadyVoted(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    bg: \"gray.100\",\n    rounded: \"md\",\n    w: \"100%\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, post.upVotesCount)), /*#__PURE__*/React.createElement(VStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"lg\",\n    colorScheme: \"yellow\",\n    \"aria-label\": \"Downvote\",\n    icon: /*#__PURE__*/React.createElement(FiArrowDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }),\n    onClick: () => handleClick(\"downvote\"),\n    isLoading: isVoting,\n    isDisabled: checkIfPostIsAlreadyVoted(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    bg: \"gray.100\",\n    rounded: \"md\",\n    w: \"100%\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, post.downVotesCount)));\n};\n\nexport default VoteButtons;","map":{"version":3,"sources":["/opt/reddit-clone/src/components/vote-buttons.js"],"names":["IconButton","Text","VStack","React","useEffect","useState","FiArrowDown","FiArrowUp","db","VoteButtons","post","isVoting","setVoting","votedPosts","setVotedPosts","votesFromLocalStorage","localStorage","getItem","previousVotes","JSON","parse","error","console","handleDisablingOfVoting","postId","push","setItem","stringify","handleClick","type","upVotesCount","downVotesCount","date","Date","collection","doc","id","set","title","createdAt","updatedAt","toUTCString","checkIfPostIsAlreadyVoted","indexOf"],"mappings":"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","sourcesContent":["import { IconButton, Text, VStack } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiArrowDown, FiArrowUp } from \"react-icons/fi\";\nimport db from \"../lib/firebase\";\n\nconst VoteButtons = ({ post }) => {\n  const [isVoting, setVoting] = useState(false);\n  const [votedPosts, setVotedPosts] = useState([]);\n\n  useEffect(() => {\n    // Fetch the previously voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\" and update the item on localStorage. Return \"true\" if the user has already voted the post.\n    const votesFromLocalStorage = localStorage.getItem(\"votes\") || [];\n    let previousVotes = [];\n\n    try {\n      // Parse the value of the item from localStorage. If the value of the\n      // items isn't an array, then JS will throw an error.\n      previousVotes = JSON.parse(votesFromLocalStorage);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setVotedPosts(previousVotes);\n  }, []);\n\n  const handleDisablingOfVoting = (postId) => {\n    // This function is responsible for disabling the voting button after a\n    // user has voted. Fetch the previously voted items from localStorage. See\n    // https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\"\n    // and update the item on localStorage.\n    const previousVotes = votedPosts;\n    previousVotes.push(postId);\n\n    setVotedPosts(previousVotes);\n\n    // Update the voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.stringify\" and update the item on localStorage.\n    localStorage.setItem(\"votes\", JSON.stringify(votedPosts));\n  };\n\n  const handleClick = async (type) => {\n    setVoting(true);\n\n    // Do calculation to save the vote.\n    let upVotesCount = post.upVotesCount;\n    let downVotesCount = post.downVotesCount;\n\n    const date = new Date();\n\n    if (type === \"upvote\") {\n      upVotesCount = upVotesCount + 1;\n    } else {\n      downVotesCount = downVotesCount + 1;\n    }\n\n    await db.collection(\"posts\").doc(post.id).set({\n      title: post.title,\n      upVotesCount,\n      downVotesCount,\n      createdAt: post.createdAt,\n      updatedAt: date.toUTCString(),\n    });\n\n    // Disable the voting button once the voting is successful.\n    handleDisablingOfVoting(post.id);\n\n    setVoting(false);\n  };\n\n  const checkIfPostIsAlreadyVoted = () => {\n    if (votedPosts.indexOf(post.id) > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"purple\"\n          aria-label=\"Upvote\"\n          icon={<FiArrowUp />}\n          onClick={() => handleClick(\"upvote\")}\n          isLoading={isVoting}\n          isDisabled={checkIfPostIsAlreadyVoted()}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.upVotesCount}\n        </Text>\n      </VStack>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"yellow\"\n          aria-label=\"Downvote\"\n          icon={<FiArrowDown />}\n          onClick={() => handleClick(\"downvote\")}\n          isLoading={isVoting}\n          isDisabled={checkIfPostIsAlreadyVoted()}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.downVotesCount}\n        </Text>\n      </VStack>\n    </>\n  );\n};\n\nexport default VoteButtons;\n"]},"metadata":{},"sourceType":"module"}