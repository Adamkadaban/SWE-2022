{"ast":null,"code":"import * as React from \"react\";\nimport { useUpdateEffect } from \"./use-update-effect\";\n/**\n * React hook to console-log a value when it mounts\n * and as it updates.\n *\n * @param label a label for the component\n * @param values parameters to log\n */\n\nexport function useLogger(label) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  React.useEffect(function () {\n    var _console;\n\n    (_console = console).log.apply(_console, [label + \" mounted:\"].concat(values));\n\n    return function () {\n      console.log(label + \" unmounted\");\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useUpdateEffect(function () {\n    var _console2;\n\n    (_console2 = console).log.apply(_console2, [label + \" updated:\"].concat(values));\n  });\n}","map":{"version":3,"sources":["../../src/use-logger.ts"],"names":["values","React","console","label","useUpdateEffect"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,eAAA,QAAA,qBAAA;AAEA;;;;;;;;AAOA,OAAO,SAAA,SAAA,CAAA,KAAA,EAAoD;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAfA,MAAe,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAfA,IAAAA,MAAe,CAAA,IAAA,GAAA,CAAA,CAAfA,GAAe,SAAA,CAAA,IAAA,CAAfA;AAAe;;AACzDC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AAAA;;AACpBC,gBAAAA,OAAO,EAAPA,GAAAA,kBAAeC,KAAfD,GAAAA,WAAAA,SAAAA,MAAAA;;AACA,WAAO,YAAM;AACXA,MAAAA,OAAO,CAAPA,GAAAA,CAAeC,KAAfD,GAAAA,YAAAA;AAHkB,KAEpB,CAFoB,CAKpB;AALFD,GAAAA,EAAAA,EAAAA;AAQAG,EAAAA,eAAe,CAAC,YAAM;AAAA;;AACpBF,iBAAAA,OAAO,EAAPA,GAAAA,mBAAeC,KAAfD,GAAAA,WAAAA,SAAAA,MAAAA;AADFE,GAAe,CAAfA;AAGD","sourcesContent":["import * as React from \"react\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\n/**\n * React hook to console-log a value when it mounts\n * and as it updates.\n *\n * @param label a label for the component\n * @param values parameters to log\n */\nexport function useLogger(label: string, ...values: any[]) {\n  React.useEffect(() => {\n    console.log(`${label} mounted:`, ...values)\n    return () => {\n      console.log(`${label} unmounted`)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useUpdateEffect(() => {\n    console.log(`${label} updated:`, ...values)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}