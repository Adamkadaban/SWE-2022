{"ast":null,"code":"import { useState } from \"react\";\n/**\n * React custom hook that returns the very first value passed to `initialState`,\n * even if it changes between re-renders.\n */\n\nexport function useConst(initialState) {\n  var [sealed] = useState(initialState);\n  return sealed;\n}","map":{"version":3,"sources":["../../src/use-const.ts"],"names":["useState"],"mappings":"AAAA,SAAA,QAAA,QAAA,OAAA;AAIA;;;;;AAIA,OAAO,SAAA,QAAA,CAAA,YAAA,EAA0D;AAC/D,MAAM,CAAA,MAAA,IAAWA,QAAQ,CAAzB,YAAyB,CAAzB;AACA,SAAA,MAAA;AACD","sourcesContent":["import { useState } from \"react\"\n\nexport type SealedInitialState<T> = T | (() => T)\n\n/**\n * React custom hook that returns the very first value passed to `initialState`,\n * even if it changes between re-renders.\n */\nexport function useConst<T>(initialState: SealedInitialState<T>) {\n  const [sealed] = useState(initialState)\n  return sealed\n}\n"]},"metadata":{},"sourceType":"module"}