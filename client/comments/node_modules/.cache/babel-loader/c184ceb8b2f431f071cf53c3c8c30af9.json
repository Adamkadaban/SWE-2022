{"ast":null,"code":"import * as React from \"react\";\nimport { useLatestRef } from \"./use-latest-ref\";\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\n\nexport function useTimeout(callback, delay) {\n  var savedCallback = useLatestRef(callback);\n  React.useEffect(function () {\n    if (delay == null) return;\n    var timeoutId = setTimeout(function () {\n      savedCallback.current == null ? void 0 : savedCallback.current();\n    }, delay);\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, [delay, savedCallback]);\n}","map":{"version":3,"sources":["../../src/use-timeout.ts"],"names":["savedCallback","useLatestRef","React","delay","timeoutId","setTimeout","clearTimeout"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,QAAA,kBAAA;AAEA;;;;;;;AAMA,OAAO,SAAA,UAAA,CAAA,QAAA,EAAA,KAAA,EAA8D;AACnE,MAAMA,aAAa,GAAGC,YAAY,CAAlC,QAAkC,CAAlC;AAEAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAIC,KAAK,IAAT,IAAA,EAAmB;AAEnB,QAAMC,SAAS,GAAGC,UAAU,CAAC,YAAM;AACjCL,MAAAA,aAAa,CAAbA,OAAAA,IAAAA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAbA,OAAAA,EAAAA;AAD0B,KAAA,EAA5B,KAA4B,CAA5B;AAIA,WAAO;AAAA,aAAMM,YAAY,CAAzB,SAAyB,CAAlB;AAAA,KAAP;AAPFJ,GAAAA,EAQG,CAAA,KAAA,EARHA,aAQG,CARHA;AASD","sourcesContent":["import * as React from \"react\"\nimport { useLatestRef } from \"./use-latest-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(callback: Function, delay: number | null) {\n  const savedCallback = useLatestRef(callback)\n\n  React.useEffect(() => {\n    if (delay == null) return\n\n    const timeoutId = setTimeout(() => {\n      savedCallback.current?.()\n    }, delay)\n\n    return () => clearTimeout(timeoutId)\n  }, [delay, savedCallback])\n}\n"]},"metadata":{},"sourceType":"module"}