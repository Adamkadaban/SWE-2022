{"ast":null,"code":"var placements = {\n  bottom: {\n    maxWidth: \"100vw\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  top: {\n    maxWidth: \"100vw\",\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  left: {\n    width: \"100%\",\n    height: \"100vh\",\n    left: 0,\n    top: 0\n  },\n  right: {\n    width: \"100%\",\n    right: 0,\n    top: 0,\n    height: \"100vh\"\n  }\n};\nvar offset = {\n  bottom: \"100%\",\n  top: \"-100%\",\n  left: \"-100%\",\n  right: \"100%\"\n};\n\nvar trans = (placement, value) => {\n  if ([\"top\", \"bottom\"].includes(placement)) {\n    return \"translate3d(0, \" + value + \", 0)\";\n  }\n\n  return \"translate3d(\" + value + \", 0, 0)\";\n};\n\nexport var createSlideConfig = placement => ({\n  enter: {\n    from: {\n      transform: trans(placement, offset[placement])\n    },\n    to: {\n      transform: trans(placement, \"0%\")\n    }\n  },\n  exit: {\n    from: {\n      transform: trans(placement, \"0%\")\n    },\n    to: {\n      transform: trans(placement, offset[placement])\n    }\n  }\n});\nexport var createSlideBaseStyle = placement => placements[placement];","map":{"version":3,"sources":["../../../src/presets/slide.ts"],"names":["placements","bottom","maxWidth","left","right","top","width","height","offset","trans","createSlideConfig","placement","enter","from","transform","to","exit","createSlideBaseStyle"],"mappings":"AAIA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EADF,OAAA;AAEND,IAAAA,MAAM,EAFA,CAAA;AAGNE,IAAAA,IAAI,EAHE,CAAA;AAINC,IAAAA,KAAK,EAAE;AAJD,GADS;AAOjBC,EAAAA,GAAG,EAAE;AACHH,IAAAA,QAAQ,EADL,OAAA;AAEHG,IAAAA,GAAG,EAFA,CAAA;AAGHF,IAAAA,IAAI,EAHD,CAAA;AAIHC,IAAAA,KAAK,EAAE;AAJJ,GAPY;AAajBD,EAAAA,IAAI,EAAE;AACJG,IAAAA,KAAK,EADD,MAAA;AAEJC,IAAAA,MAAM,EAFF,OAAA;AAGJJ,IAAAA,IAAI,EAHA,CAAA;AAIJE,IAAAA,GAAG,EAAE;AAJD,GAbW;AAmBjBD,EAAAA,KAAK,EAAE;AACLE,IAAAA,KAAK,EADA,MAAA;AAELF,IAAAA,KAAK,EAFA,CAAA;AAGLC,IAAAA,GAAG,EAHE,CAAA;AAILE,IAAAA,MAAM,EAAE;AAJH;AAnBU,CAAnB;AA2BA,IAAMC,MAAM,GAAG;AACbP,EAAAA,MAAM,EADO,MAAA;AAEbI,EAAAA,GAAG,EAFU,OAAA;AAGbF,EAAAA,IAAI,EAHS,OAAA;AAIbC,EAAAA,KAAK,EAAE;AAJM,CAAf;;AAOA,IAAMK,KAAK,GAAG,CAAA,SAAA,EAAA,KAAA,KAA8C;AAC1D,MAAI,CAAA,KAAA,EAAA,QAAA,EAAA,QAAA,CAAJ,SAAI,CAAJ,EAA2C;AACzC,WAAA,oBAAA,KAAA,GAAA,MAAA;AACD;;AACD,SAAA,iBAAA,KAAA,GAAA,SAAA;AAJF,CAAA;;AAOA,OAAO,IAAMC,iBAAiB,GAC5BC,SAD+B,KAEA;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAEL,KAAK,CAAA,SAAA,EAAYD,MAAM,CAAlB,SAAkB,CAAlB;AAAlB,KADD;AAELO,IAAAA,EAAE,EAAE;AAAED,MAAAA,SAAS,EAAEL,KAAK,CAAA,SAAA,EAAA,IAAA;AAAlB;AAFC,GADwB;AAK/BO,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAEL,KAAK,CAAA,SAAA,EAAA,IAAA;AAAlB,KADF;AAEJM,IAAAA,EAAE,EAAE;AAAED,MAAAA,SAAS,EAAEL,KAAK,CAAA,SAAA,EAAYD,MAAM,CAAlB,SAAkB,CAAlB;AAAlB;AAFA;AALyB,CAFA,CAA1B;AAaP,OAAO,IAAMS,oBAAoB,GAAIN,SAAD,IAClCX,UAAU,CADL,SACK,CADL","sourcesContent":["import { TransitionConfig } from \"../transition-config\"\n\nexport type SlidePlacement = \"left\" | \"right\" | \"bottom\" | \"top\"\n\nconst placements = {\n  bottom: {\n    maxWidth: \"100vw\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  top: {\n    maxWidth: \"100vw\",\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  left: {\n    width: \"100%\",\n    height: \"100vh\",\n    left: 0,\n    top: 0,\n  },\n  right: {\n    width: \"100%\",\n    right: 0,\n    top: 0,\n    height: \"100vh\",\n  },\n}\n\nconst offset = {\n  bottom: \"100%\",\n  top: \"-100%\",\n  left: \"-100%\",\n  right: \"100%\",\n}\n\nconst trans = (placement: SlidePlacement, value: string) => {\n  if ([\"top\", \"bottom\"].includes(placement)) {\n    return `translate3d(0, ${value}, 0)`\n  }\n  return `translate3d(${value}, 0, 0)`\n}\n\nexport const createSlideConfig = (\n  placement: SlidePlacement,\n): Partial<TransitionConfig> => ({\n  enter: {\n    from: { transform: trans(placement, offset[placement]) },\n    to: { transform: trans(placement, \"0%\") },\n  },\n  exit: {\n    from: { transform: trans(placement, \"0%\") },\n    to: { transform: trans(placement, offset[placement]) },\n  },\n})\n\nexport const createSlideBaseStyle = (placement: SlidePlacement) =>\n  placements[placement]\n"]},"metadata":{},"sourceType":"module"}