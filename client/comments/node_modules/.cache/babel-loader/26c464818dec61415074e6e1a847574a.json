{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport ReactTransition from \"react-transition-group/Transition\";\nexport var Transition = props => {\n  var {\n    styles,\n    in: inProp,\n    timeout = 150,\n    transition = \"all \" + timeout + \"ms ease-in-out\",\n    children\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"styles\", \"in\", \"timeout\", \"transition\", \"children\"]);\n\n  var getStyle = state => _extends({}, styles.init, {\n    transition\n  }, styles[state]);\n\n  return /*#__PURE__*/React.createElement(ReactTransition, _extends({\n    appear: true,\n    unmountOnExit: true,\n    in: inProp,\n    timeout: timeout\n  }, rest), state => children(getStyle(state)));\n};\n\nif (__DEV__) {\n  Transition.displayName = \"Transition\";\n}","map":{"version":3,"sources":["../../src/transition.tsx"],"names":["Transition","props","in","timeout","transition","children","rest","getStyle","state","styles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,eAAA,MAAA,mCAAA;AAiCA,OAAO,IAAMA,UAAqC,GAAIC,KAAD,IAAW;AAC9D,MAAM;AAAA,IAAA,MAAA;AAEJC,IAAAA,EAAE,EAFE,MAAA;AAGJC,IAAAA,OAAO,GAHH,GAAA;AAIJC,IAAAA,UAAU,GAAA,SAAA,OAAA,GAJN,gBAAA;AAKJC,IAAAA;AALI,MAAN,KAAA;AAAA,MAMKC,IANL,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,QAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAA,EAAA,UAAA,CAAA,CAAA;;AASA,MAAMC,QAAQ,GAAIC,KAAD,IAAA,QAAA,CAAA,EAAA,EACZC,MAAM,CADM,IAAA,EAAA;AAEfL,IAAAA;AAFe,GAAA,EAGXK,MAAD,CAHL,KAGK,CAHY,CAAjB;;AAMA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,QAAA,CAAA;AACE,IAAA,MAAM,EADR,IAAA;AAEE,IAAA,aAAa,EAFf,IAAA;AAGE,IAAA,EAAE,EAHJ,MAAA;AAIE,IAAA,OAAO,EAAEN;AAJX,GAAA,EAAA,IAAA,CAAA,EAOIK,KAAD,IAAWH,QAAQ,CAACE,QAAQ,CARjC,KAQiC,CAAT,CAPtB,CADF;AAhBK,CAAA;;AA6BP,IAAA,OAAA,EAAa;AACXP,EAAAA,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AACD","sourcesContent":["import { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport ReactTransition from \"react-transition-group/Transition\"\nimport type {\n  TransitionProps as ReactTransitionProps,\n  TransitionStatus,\n} from \"react-transition-group/Transition\"\n\ntype RTGProps = Pick<\n  ReactTransitionProps,\n  | \"in\"\n  | \"onEnter\"\n  | \"onEntering\"\n  | \"onEntered\"\n  | \"onExit\"\n  | \"onExiting\"\n  | \"onExited\"\n  | \"unmountOnExit\"\n  | \"timeout\"\n>\n\nexport interface TransitionProps extends RTGProps {\n  transition?: string\n  children: (styles: React.CSSProperties) => React.ReactNode\n  styles: TransitionStyles\n}\n\nexport type TransitionStyleState = \"init\" | \"entered\" | \"exiting\"\n\nexport type TransitionStyles = {\n  [K in TransitionStyleState]?: React.CSSProperties\n}\n\nexport type { TransitionStatus }\n\nexport const Transition: React.FC<TransitionProps> = (props) => {\n  const {\n    styles,\n    in: inProp,\n    timeout = 150,\n    transition = `all ${timeout}ms ease-in-out`,\n    children,\n    ...rest\n  } = props\n\n  const getStyle = (state: TransitionStatus) => ({\n    ...styles.init,\n    transition,\n    ...(styles as any)[state],\n  })\n\n  return (\n    <ReactTransition\n      appear\n      unmountOnExit\n      in={inProp}\n      timeout={timeout}\n      {...(rest as any)}\n    >\n      {(state) => children(getStyle(state))}\n    </ReactTransition>\n  )\n}\n\nif (__DEV__) {\n  Transition.displayName = \"Transition\"\n}\n"]},"metadata":{},"sourceType":"module"}