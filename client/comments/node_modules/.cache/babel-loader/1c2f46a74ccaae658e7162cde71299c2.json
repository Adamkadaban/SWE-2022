{"ast":null,"code":"import _slicedToArray from \"/opt/reddit-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\n/**\n * React custom hook that returns the very first value passed to `initialState`,\n * even if it changes between re-renders.\n */\n\nexport function useConst(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 1),\n      sealed = _useState2[0];\n\n  return sealed;\n}","map":{"version":3,"sources":["../../src/use-const.ts"],"names":["useState"],"mappings":";AAAA,SAAA,QAAA,QAAA,OAAA;AAIA;;;;;AAIA,OAAO,SAAA,QAAA,CAAA,YAAA,EAA0D;AAAA,kBAC9CA,QAAQ,CAAzB,YAAyB,CADsC;AAAA;AAAA,MACzD,MADyD;;AAE/D,SAAA,MAAA;AACD","sourcesContent":["import { useState } from \"react\"\n\nexport type SealedInitialState<T> = T | (() => T)\n\n/**\n * React custom hook that returns the very first value passed to `initialState`,\n * even if it changes between re-renders.\n */\nexport function useConst<T>(initialState: SealedInitialState<T>) {\n  const [sealed] = useState(initialState)\n  return sealed\n}\n"]},"metadata":{},"sourceType":"module"}