{"ast":null,"code":"var _jsxFileName = \"/opt/reddit-clone/src/components/add-new-post.js\";\nimport { Button, FormControl, FormLabel, Textarea, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, HStack, useDisclosure } from \"@chakra-ui/core\";\nimport React, { useState } from \"react\";\nimport db from \"../lib/firebase\";\n\nconst AddNewPost = () => {\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [title, setTitle] = useState(\"\");\n  const [isSaving, setSaving] = useState(false);\n\n  const handleSubmit = async () => {\n    setSaving(true);\n    const date = new Date();\n    await db.collection(\"posts\").add({\n      title,\n      content,\n      upVotesCount: 0,\n      downVotesCount: 0,\n      createdAt: date.toUTCString(),\n      updatedAt: date.toUTCString()\n    });\n    onClose();\n    setTitle(\"\");\n    setSaving(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onOpen,\n    colorScheme: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Add new post\"), /*#__PURE__*/React.createElement(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    isCentered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Add new post\"), /*#__PURE__*/React.createElement(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    id: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Post title\"), /*#__PURE__*/React.createElement(Textarea, {\n    type: \"post-title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HStack, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    colorScheme: \"blue\",\n    disabled: !title.trim(),\n    isLoading: isSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Save\")))))));\n};\n\nexport default AddNewPost;","map":{"version":3,"sources":["/opt/reddit-clone/src/components/add-new-post.js"],"names":["Button","FormControl","FormLabel","Textarea","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","HStack","useDisclosure","React","useState","db","AddNewPost","isOpen","onOpen","onClose","title","setTitle","isSaving","setSaving","handleSubmit","date","Date","collection","add","content","upVotesCount","downVotesCount","createdAt","toUTCString","updatedAt","e","target","value","trim"],"mappings":"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","sourcesContent":["import {\n  Button,\n  FormControl,\n  FormLabel,\n  Textarea,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  HStack,\n  useDisclosure,\n} from \"@chakra-ui/core\";\nimport React, { useState } from \"react\";\nimport db from \"../lib/firebase\";\n\nconst AddNewPost = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [title, setTitle] = useState(\"\");\n  const [isSaving, setSaving] = useState(false);\n\n  const handleSubmit = async () => {\n    setSaving(true);\n\n    const date = new Date();\n\n    await db.collection(\"posts\").add({\n      title,\n\t  content,\n      upVotesCount: 0,\n      downVotesCount: 0,\n      createdAt: date.toUTCString(),\n      updatedAt: date.toUTCString(),\n    });\n\n    onClose();\n    setTitle(\"\");\n    setSaving(false);\n  };\n\n  return (\n    <>\n      <Button onClick={onOpen} colorScheme=\"blue\">\n        Add new post\n      </Button>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay>\n          <ModalContent>\n            <ModalHeader>Add new post</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <FormControl id=\"post-title\">\n                <FormLabel>Post title</FormLabel>\n                <Textarea\n                  type=\"post-title\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </FormControl>\n            </ModalBody>\n            <ModalFooter>\n              <HStack spacing={4}>\n                <Button onClick={onClose}>Close</Button>\n                <Button\n                  onClick={handleSubmit}\n                  colorScheme=\"blue\"\n                  disabled={!title.trim()}\n                  isLoading={isSaving}\n                >\n                  Save\n                </Button>\n              </HStack>\n            </ModalFooter>\n          </ModalContent>\n        </ModalOverlay>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewPost;\n"]},"metadata":{},"sourceType":"module"}