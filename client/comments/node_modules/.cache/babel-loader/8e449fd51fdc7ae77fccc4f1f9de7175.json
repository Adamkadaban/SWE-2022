{"ast":null,"code":"import _slicedToArray from \"/opt/reddit-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from \"react\";\n/**\n * React hook for force a component to re-render\n */\n\nexport function useForceUpdate() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  var forceUpdate = React.useCallback(function () {\n    return setCount(count + 1);\n  }, [count]);\n  return forceUpdate;\n}","map":{"version":3,"sources":["../../src/use-force-update.ts"],"names":["React","forceUpdate","setCount","count"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA;;;;AAGA,OAAO,SAAA,cAAA,GAA0B;AAAA,wBACLA,KAAK,CAALA,QAAAA,CAA1B,CAA0BA,CADK;AAAA;AAAA,MACzB,KADyB;AAAA,MACzB,QADyB;;AAE/B,MAAMC,WAAW,GAAGD,KAAK,CAALA,WAAAA,CAAkB;AAAA,WAAME,QAAQ,CAACC,KAAK,GAAtCH,CAAgC,CAAd;AAAA,GAAlBA,EAA6C,CAAjE,KAAiE,CAA7CA,CAApB;AACA,SAAA,WAAA;AACD","sourcesContent":["import * as React from \"react\"\n\n/**\n * React hook for force a component to re-render\n */\nexport function useForceUpdate() {\n  const [count, setCount] = React.useState(0)\n  const forceUpdate = React.useCallback(() => setCount(count + 1), [count])\n  return forceUpdate\n}\n"]},"metadata":{},"sourceType":"module"}